
disp_i2c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a0a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000a7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  00800060  00800060  00000a7e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ab0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000aec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000116c  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006eb  00000000  00000000  00001cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000de6  00000000  00000000  000023c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a8  00000000  00000000  000031ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005cc  00000000  00000000  00003354  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cb0  00000000  00000000  00003920  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  000045d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	48 c0       	rjmp	.+144    	; 0x92 <__ctors_end>
   2:	57 c0       	rjmp	.+174    	; 0xb2 <__bad_interrupt>
   4:	56 c0       	rjmp	.+172    	; 0xb2 <__bad_interrupt>
   6:	55 c0       	rjmp	.+170    	; 0xb2 <__bad_interrupt>
   8:	f0 c0       	rjmp	.+480    	; 0x1ea <__vector_4>
   a:	53 c0       	rjmp	.+166    	; 0xb2 <__bad_interrupt>
   c:	52 c0       	rjmp	.+164    	; 0xb2 <__bad_interrupt>
   e:	51 c0       	rjmp	.+162    	; 0xb2 <__bad_interrupt>
  10:	50 c0       	rjmp	.+160    	; 0xb2 <__bad_interrupt>
  12:	4f c0       	rjmp	.+158    	; 0xb2 <__bad_interrupt>
  14:	4e c0       	rjmp	.+156    	; 0xb2 <__bad_interrupt>
  16:	4d c0       	rjmp	.+154    	; 0xb2 <__bad_interrupt>
  18:	4c c0       	rjmp	.+152    	; 0xb2 <__bad_interrupt>
  1a:	4b c0       	rjmp	.+150    	; 0xb2 <__bad_interrupt>
  1c:	4a c0       	rjmp	.+148    	; 0xb2 <__bad_interrupt>
  1e:	49 c0       	rjmp	.+146    	; 0xb2 <__bad_interrupt>
  20:	48 c0       	rjmp	.+144    	; 0xb2 <__bad_interrupt>
  22:	70 c0       	rjmp	.+224    	; 0x104 <__vector_17>
  24:	46 c0       	rjmp	.+140    	; 0xb2 <__bad_interrupt>
  26:	2e c1       	rjmp	.+604    	; 0x284 <_Z6setsegh+0x1a>
  28:	31 c1       	rjmp	.+610    	; 0x28c <_Z6setsegh+0x22>
  2a:	34 c1       	rjmp	.+616    	; 0x294 <_Z6setsegh+0x2a>
  2c:	37 c1       	rjmp	.+622    	; 0x29c <_Z6setsegh+0x32>
  2e:	3a c1       	rjmp	.+628    	; 0x2a4 <_Z6setsegh+0x3a>
  30:	3d c1       	rjmp	.+634    	; 0x2ac <_Z6setsegh+0x42>
  32:	40 c1       	rjmp	.+640    	; 0x2b4 <_Z6setsegh+0x4a>
  34:	43 c1       	rjmp	.+646    	; 0x2bc <_Z6setsegh+0x52>
  36:	46 c1       	rjmp	.+652    	; 0x2c4 <_Z6setsegh+0x5a>
  38:	49 c1       	rjmp	.+658    	; 0x2cc <_Z6setsegh+0x62>
  3a:	4c c1       	rjmp	.+664    	; 0x2d4 <_Z6setsegh+0x6a>
  3c:	4d c1       	rjmp	.+666    	; 0x2d8 <_Z6setsegh+0x6e>
  3e:	50 c1       	rjmp	.+672    	; 0x2e0 <_Z6setsegh+0x76>
  40:	53 c1       	rjmp	.+678    	; 0x2e8 <_Z6setsegh+0x7e>
  42:	56 c1       	rjmp	.+684    	; 0x2f0 <_Z6setsegh+0x86>
  44:	59 c1       	rjmp	.+690    	; 0x2f8 <_Z6setsegh+0x8e>
  46:	5c c1       	rjmp	.+696    	; 0x300 <_Z6setsegh+0x96>
  48:	5d c1       	rjmp	.+698    	; 0x304 <_Z6setsegh+0x9a>
  4a:	5e c1       	rjmp	.+700    	; 0x308 <_Z6setsegh+0x9e>
  4c:	61 c1       	rjmp	.+706    	; 0x310 <_Z6setsegh+0xa6>
  4e:	a0 c3       	rjmp	.+1856   	; 0x790 <main+0x178>
  50:	a5 c3       	rjmp	.+1866   	; 0x79c <main+0x184>
  52:	b6 c3       	rjmp	.+1900   	; 0x7c0 <main+0x1a8>
  54:	c8 c3       	rjmp	.+1936   	; 0x7e6 <main+0x1ce>
  56:	da c3       	rjmp	.+1972   	; 0x80c <main+0x1f4>
  58:	ec c3       	rjmp	.+2008   	; 0x832 <main+0x21a>
  5a:	fd c3       	rjmp	.+2042   	; 0x856 <main+0x23e>
  5c:	0e c4       	rjmp	.+2076   	; 0x87a <main+0x262>
  5e:	1f c4       	rjmp	.+2110   	; 0x89e <main+0x286>
  60:	30 c4       	rjmp	.+2144   	; 0x8c2 <main+0x2aa>
  62:	41 c4       	rjmp	.+2178   	; 0x8e6 <main+0x2ce>
  64:	40 c4       	rjmp	.+2176   	; 0x8e6 <main+0x2ce>
  66:	3f c4       	rjmp	.+2174   	; 0x8e6 <main+0x2ce>
  68:	3e c4       	rjmp	.+2172   	; 0x8e6 <main+0x2ce>
  6a:	3d c4       	rjmp	.+2170   	; 0x8e6 <main+0x2ce>
  6c:	3c c4       	rjmp	.+2168   	; 0x8e6 <main+0x2ce>
  6e:	3b c4       	rjmp	.+2166   	; 0x8e6 <main+0x2ce>
  70:	3a c4       	rjmp	.+2164   	; 0x8e6 <main+0x2ce>
  72:	39 c4       	rjmp	.+2162   	; 0x8e6 <main+0x2ce>
  74:	38 c4       	rjmp	.+2160   	; 0x8e6 <main+0x2ce>
  76:	48 c4       	rjmp	.+2192   	; 0x908 <main+0x2f0>
  78:	47 c4       	rjmp	.+2190   	; 0x908 <main+0x2f0>
  7a:	46 c4       	rjmp	.+2188   	; 0x908 <main+0x2f0>
  7c:	45 c4       	rjmp	.+2186   	; 0x908 <main+0x2f0>
  7e:	44 c4       	rjmp	.+2184   	; 0x908 <main+0x2f0>
  80:	43 c4       	rjmp	.+2182   	; 0x908 <main+0x2f0>
  82:	42 c4       	rjmp	.+2180   	; 0x908 <main+0x2f0>
  84:	41 c4       	rjmp	.+2178   	; 0x908 <main+0x2f0>
  86:	40 c4       	rjmp	.+2176   	; 0x908 <main+0x2f0>
  88:	3f c4       	rjmp	.+2174   	; 0x908 <main+0x2f0>
  8a:	4f c4       	rjmp	.+2206   	; 0x92a <main+0x312>
  8c:	60 c4       	rjmp	.+2240   	; 0x94e <main+0x336>
  8e:	71 c4       	rjmp	.+2274   	; 0x972 <main+0x35a>
  90:	82 c4       	rjmp	.+2308   	; 0x996 <main+0x37e>

00000092 <__ctors_end>:
  92:	11 24       	eor	r1, r1
  94:	1f be       	out	0x3f, r1	; 63
  96:	cf e5       	ldi	r28, 0x5F	; 95
  98:	d4 e0       	ldi	r29, 0x04	; 4
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_clear_bss>:
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	a0 e6       	ldi	r26, 0x60	; 96
  a2:	b0 e0       	ldi	r27, 0x00	; 0
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a9 38       	cpi	r26, 0x89	; 137
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	b4 d2       	rcall	.+1384   	; 0x618 <main>
  b0:	aa c4       	rjmp	.+2388   	; 0xa06 <_exit>

000000b2 <__bad_interrupt>:
  b2:	a6 cf       	rjmp	.-180    	; 0x0 <__vectors>

000000b4 <_Z14_switch_filterP12SwitchFilter>:
		
		setseg(10);
		_delay_ms(UPDATE_DISPLAY);
	}
	
}
  b4:	fc 01       	movw	r30, r24
  b6:	a5 81       	ldd	r26, Z+5	; 0x05
  b8:	b6 81       	ldd	r27, Z+6	; 0x06
  ba:	9c 91       	ld	r25, X
  bc:	87 81       	ldd	r24, Z+7	; 0x07
  be:	89 23       	and	r24, r25
  c0:	a9 f4       	brne	.+42     	; 0xec <_Z14_switch_filterP12SwitchFilter+0x38>
  c2:	80 85       	ldd	r24, Z+8	; 0x08
  c4:	93 81       	ldd	r25, Z+3	; 0x03
  c6:	89 17       	cp	r24, r25
  c8:	10 f0       	brcs	.+4      	; 0xce <_Z14_switch_filterP12SwitchFilter+0x1a>
  ca:	91 e0       	ldi	r25, 0x01	; 1
  cc:	92 83       	std	Z+2, r25	; 0x02
  ce:	94 81       	ldd	r25, Z+4	; 0x04
  d0:	89 17       	cp	r24, r25
  d2:	20 f0       	brcs	.+8      	; 0xdc <_Z14_switch_filterP12SwitchFilter+0x28>
  d4:	12 82       	std	Z+2, r1	; 0x02
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	81 83       	std	Z+1, r24	; 0x01
  da:	02 c0       	rjmp	.+4      	; 0xe0 <_Z14_switch_filterP12SwitchFilter+0x2c>
  dc:	8f 5f       	subi	r24, 0xFF	; 255
  de:	80 87       	std	Z+8, r24	; 0x08
  e0:	83 81       	ldd	r24, Z+3	; 0x03
  e2:	8f 3f       	cpi	r24, 0xFF	; 255
  e4:	41 f4       	brne	.+16     	; 0xf6 <_Z14_switch_filterP12SwitchFilter+0x42>
  e6:	10 86       	std	Z+8, r1	; 0x08
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	08 95       	ret
  ec:	82 81       	ldd	r24, Z+2	; 0x02
  ee:	12 82       	std	Z+2, r1	; 0x02
  f0:	11 82       	std	Z+1, r1	; 0x01
  f2:	10 86       	std	Z+8, r1	; 0x08
  f4:	08 95       	ret
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	08 95       	ret

000000fa <_Z14i2c_init_slaveh>:
  fa:	82 b9       	out	0x02, r24	; 2
  fc:	85 ec       	ldi	r24, 0xC5	; 197
  fe:	86 bf       	out	0x36, r24	; 54
 100:	78 94       	sei
 102:	08 95       	ret

00000104 <__vector_17>:
 104:	1f 92       	push	r1
 106:	0f 92       	push	r0
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	0f 92       	push	r0
 10c:	11 24       	eor	r1, r1
 10e:	8f 93       	push	r24
 110:	9f 93       	push	r25
 112:	ef 93       	push	r30
 114:	ff 93       	push	r31
 116:	81 b1       	in	r24, 0x01	; 1
 118:	88 7f       	andi	r24, 0xF8	; 248
 11a:	80 36       	cpi	r24, 0x60	; 96
 11c:	39 f4       	brne	.+14     	; 0x12c <__vector_17+0x28>
 11e:	8f ef       	ldi	r24, 0xFF	; 255
 120:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <i2c_reg_addr_>
 124:	86 b7       	in	r24, 0x36	; 54
 126:	85 6c       	ori	r24, 0xC5	; 197
 128:	86 bf       	out	0x36, r24	; 54
 12a:	56 c0       	rjmp	.+172    	; 0x1d8 <__vector_17+0xd4>
 12c:	81 b1       	in	r24, 0x01	; 1
 12e:	88 7f       	andi	r24, 0xF8	; 248
 130:	80 38       	cpi	r24, 0x80	; 128
 132:	39 f5       	brne	.+78     	; 0x182 <__vector_17+0x7e>
 134:	93 b1       	in	r25, 0x03	; 3
 136:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <i2c_reg_addr_>
 13a:	8f 3f       	cpi	r24, 0xFF	; 255
 13c:	59 f4       	brne	.+22     	; 0x154 <__vector_17+0x50>
 13e:	95 30       	cpi	r25, 0x05	; 5
 140:	18 f4       	brcc	.+6      	; 0x148 <__vector_17+0x44>
 142:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <i2c_reg_addr_>
 146:	02 c0       	rjmp	.+4      	; 0x14c <__vector_17+0x48>
 148:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <i2c_reg_addr_>
 14c:	86 b7       	in	r24, 0x36	; 54
 14e:	85 6c       	ori	r24, 0xC5	; 197
 150:	86 bf       	out	0x36, r24	; 54
 152:	42 c0       	rjmp	.+132    	; 0x1d8 <__vector_17+0xd4>
 154:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <i2c_reg_addr_>
 158:	85 30       	cpi	r24, 0x05	; 5
 15a:	78 f4       	brcc	.+30     	; 0x17a <__vector_17+0x76>
 15c:	e0 91 83 00 	lds	r30, 0x0083	; 0x800083 <i2c_reg_addr_>
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	ec 57       	subi	r30, 0x7C	; 124
 164:	ff 4f       	sbci	r31, 0xFF	; 255
 166:	90 83       	st	Z, r25
 168:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <i2c_reg_addr_>
 16c:	8f 5f       	subi	r24, 0xFF	; 255
 16e:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <i2c_reg_addr_>
 172:	86 b7       	in	r24, 0x36	; 54
 174:	85 6c       	ori	r24, 0xC5	; 197
 176:	86 bf       	out	0x36, r24	; 54
 178:	2f c0       	rjmp	.+94     	; 0x1d8 <__vector_17+0xd4>
 17a:	86 b7       	in	r24, 0x36	; 54
 17c:	85 68       	ori	r24, 0x85	; 133
 17e:	86 bf       	out	0x36, r24	; 54
 180:	2b c0       	rjmp	.+86     	; 0x1d8 <__vector_17+0xd4>
 182:	81 b1       	in	r24, 0x01	; 1
 184:	88 7f       	andi	r24, 0xF8	; 248
 186:	88 3b       	cpi	r24, 0xB8	; 184
 188:	21 f5       	brne	.+72     	; 0x1d2 <__vector_17+0xce>
 18a:	93 b1       	in	r25, 0x03	; 3
 18c:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <i2c_reg_addr_>
 190:	8f 3f       	cpi	r24, 0xFF	; 255
 192:	39 f4       	brne	.+14     	; 0x1a2 <__vector_17+0x9e>
 194:	95 30       	cpi	r25, 0x05	; 5
 196:	18 f4       	brcc	.+6      	; 0x19e <__vector_17+0x9a>
 198:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <i2c_reg_addr_>
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <__vector_17+0x9e>
 19e:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <i2c_reg_addr_>
 1a2:	e0 91 83 00 	lds	r30, 0x0083	; 0x800083 <i2c_reg_addr_>
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	ec 57       	subi	r30, 0x7C	; 124
 1aa:	ff 4f       	sbci	r31, 0xFF	; 255
 1ac:	80 81       	ld	r24, Z
 1ae:	83 b9       	out	0x03, r24	; 3
 1b0:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <i2c_reg_addr_>
 1b4:	8f 5f       	subi	r24, 0xFF	; 255
 1b6:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <i2c_reg_addr_>
 1ba:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <i2c_reg_addr_>
 1be:	85 30       	cpi	r24, 0x05	; 5
 1c0:	20 f4       	brcc	.+8      	; 0x1ca <__vector_17+0xc6>
 1c2:	86 b7       	in	r24, 0x36	; 54
 1c4:	85 6c       	ori	r24, 0xC5	; 197
 1c6:	86 bf       	out	0x36, r24	; 54
 1c8:	07 c0       	rjmp	.+14     	; 0x1d8 <__vector_17+0xd4>
 1ca:	86 b7       	in	r24, 0x36	; 54
 1cc:	85 68       	ori	r24, 0x85	; 133
 1ce:	86 bf       	out	0x36, r24	; 54
 1d0:	03 c0       	rjmp	.+6      	; 0x1d8 <__vector_17+0xd4>
 1d2:	86 b7       	in	r24, 0x36	; 54
 1d4:	85 64       	ori	r24, 0x45	; 69
 1d6:	86 bf       	out	0x36, r24	; 54
 1d8:	ff 91       	pop	r31
 1da:	ef 91       	pop	r30
 1dc:	9f 91       	pop	r25
 1de:	8f 91       	pop	r24
 1e0:	0f 90       	pop	r0
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	0f 90       	pop	r0
 1e6:	1f 90       	pop	r1
 1e8:	18 95       	reti

000001ea <__vector_4>:
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	2f 93       	push	r18
 1f6:	3f 93       	push	r19
 1f8:	4f 93       	push	r20
 1fa:	5f 93       	push	r21
 1fc:	6f 93       	push	r22
 1fe:	7f 93       	push	r23
 200:	8f 93       	push	r24
 202:	9f 93       	push	r25
 204:	af 93       	push	r26
 206:	bf 93       	push	r27
 208:	ef 93       	push	r30
 20a:	ff 93       	push	r31
 20c:	89 e6       	ldi	r24, 0x69	; 105
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	51 df       	rcall	.-350    	; 0xb4 <_Z14_switch_filterP12SwitchFilter>
 212:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <Key1>
 216:	80 e6       	ldi	r24, 0x60	; 96
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	4c df       	rcall	.-360    	; 0xb4 <_Z14_switch_filterP12SwitchFilter>
 21c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 220:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <blink>
 224:	8c 30       	cpi	r24, 0x0C	; 12
 226:	30 f4       	brcc	.+12     	; 0x234 <__vector_4+0x4a>
 228:	8f 5f       	subi	r24, 0xFF	; 255
 22a:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <blink>
 22e:	8c 30       	cpi	r24, 0x0C	; 12
 230:	21 f0       	breq	.+8      	; 0x23a <__vector_4+0x50>
 232:	09 c0       	rjmp	.+18     	; 0x246 <__vector_4+0x5c>
 234:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <blink>
 238:	06 c0       	rjmp	.+12     	; 0x246 <__vector_4+0x5c>
 23a:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <blink_bus>
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	89 27       	eor	r24, r25
 242:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <blink_bus>
 246:	14 bc       	out	0x24, r1	; 36
 248:	ff 91       	pop	r31
 24a:	ef 91       	pop	r30
 24c:	bf 91       	pop	r27
 24e:	af 91       	pop	r26
 250:	9f 91       	pop	r25
 252:	8f 91       	pop	r24
 254:	7f 91       	pop	r23
 256:	6f 91       	pop	r22
 258:	5f 91       	pop	r21
 25a:	4f 91       	pop	r20
 25c:	3f 91       	pop	r19
 25e:	2f 91       	pop	r18
 260:	0f 90       	pop	r0
 262:	0f be       	out	0x3f, r0	; 63
 264:	0f 90       	pop	r0
 266:	1f 90       	pop	r1
 268:	18 95       	reti

0000026a <_Z6setsegh>:
 26a:	e8 2f       	mov	r30, r24
 26c:	8f ef       	ldi	r24, 0xFF	; 255
 26e:	82 bb       	out	0x12, r24	; 18
 270:	8e 2f       	mov	r24, r30
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	08 f0       	brcs	.+2      	; 0x27c <_Z6setsegh+0x12>
 27a:	4d c0       	rjmp	.+154    	; 0x316 <_Z6setsegh+0xac>
 27c:	fc 01       	movw	r30, r24
 27e:	ed 5e       	subi	r30, 0xED	; 237
 280:	ff 4f       	sbci	r31, 0xFF	; 255
 282:	09 94       	ijmp
 284:	82 b3       	in	r24, 0x12	; 18
 286:	80 7a       	andi	r24, 0xA0	; 160
 288:	82 bb       	out	0x12, r24	; 18
 28a:	08 95       	ret
 28c:	82 b3       	in	r24, 0x12	; 18
 28e:	8d 7b       	andi	r24, 0xBD	; 189
 290:	82 bb       	out	0x12, r24	; 18
 292:	08 95       	ret
 294:	82 b3       	in	r24, 0x12	; 18
 296:	84 76       	andi	r24, 0x64	; 100
 298:	82 bb       	out	0x12, r24	; 18
 29a:	08 95       	ret
 29c:	82 b3       	in	r24, 0x12	; 18
 29e:	8c 72       	andi	r24, 0x2C	; 44
 2a0:	82 bb       	out	0x12, r24	; 18
 2a2:	08 95       	ret
 2a4:	82 b3       	in	r24, 0x12	; 18
 2a6:	89 73       	andi	r24, 0x39	; 57
 2a8:	82 bb       	out	0x12, r24	; 18
 2aa:	08 95       	ret
 2ac:	82 b3       	in	r24, 0x12	; 18
 2ae:	8a 72       	andi	r24, 0x2A	; 42
 2b0:	82 bb       	out	0x12, r24	; 18
 2b2:	08 95       	ret
 2b4:	82 b3       	in	r24, 0x12	; 18
 2b6:	82 72       	andi	r24, 0x22	; 34
 2b8:	82 bb       	out	0x12, r24	; 18
 2ba:	08 95       	ret
 2bc:	82 b3       	in	r24, 0x12	; 18
 2be:	8c 7b       	andi	r24, 0xBC	; 188
 2c0:	82 bb       	out	0x12, r24	; 18
 2c2:	08 95       	ret
 2c4:	82 b3       	in	r24, 0x12	; 18
 2c6:	80 72       	andi	r24, 0x20	; 32
 2c8:	82 bb       	out	0x12, r24	; 18
 2ca:	08 95       	ret
 2cc:	82 b3       	in	r24, 0x12	; 18
 2ce:	88 72       	andi	r24, 0x28	; 40
 2d0:	82 bb       	out	0x12, r24	; 18
 2d2:	08 95       	ret
 2d4:	97 98       	cbi	0x12, 7	; 18
 2d6:	08 95       	ret
 2d8:	82 b3       	in	r24, 0x12	; 18
 2da:	81 7a       	andi	r24, 0xA1	; 161
 2dc:	82 bb       	out	0x12, r24	; 18
 2de:	08 95       	ret
 2e0:	82 b3       	in	r24, 0x12	; 18
 2e2:	85 72       	andi	r24, 0x25	; 37
 2e4:	82 bb       	out	0x12, r24	; 18
 2e6:	08 95       	ret
 2e8:	82 b3       	in	r24, 0x12	; 18
 2ea:	83 7e       	andi	r24, 0xE3	; 227
 2ec:	82 bb       	out	0x12, r24	; 18
 2ee:	08 95       	ret
 2f0:	82 b3       	in	r24, 0x12	; 18
 2f2:	85 72       	andi	r24, 0x25	; 37
 2f4:	82 bb       	out	0x12, r24	; 18
 2f6:	08 95       	ret
 2f8:	82 b3       	in	r24, 0x12	; 18
 2fa:	80 7b       	andi	r24, 0xB0	; 176
 2fc:	82 bb       	out	0x12, r24	; 18
 2fe:	08 95       	ret
 300:	94 98       	cbi	0x12, 4	; 18
 302:	08 95       	ret
 304:	90 98       	cbi	0x12, 0	; 18
 306:	08 95       	ret
 308:	82 b3       	in	r24, 0x12	; 18
 30a:	8e 7e       	andi	r24, 0xEE	; 238
 30c:	82 bb       	out	0x12, r24	; 18
 30e:	08 95       	ret
 310:	82 b3       	in	r24, 0x12	; 18
 312:	82 7e       	andi	r24, 0xE2	; 226
 314:	82 bb       	out	0x12, r24	; 18
 316:	08 95       	ret

00000318 <_Z9selectsegh>:
 318:	95 b3       	in	r25, 0x15	; 21
 31a:	9f 60       	ori	r25, 0x0F	; 15
 31c:	95 bb       	out	0x15, r25	; 21
 31e:	82 30       	cpi	r24, 0x02	; 2
 320:	59 f0       	breq	.+22     	; 0x338 <_Z9selectsegh+0x20>
 322:	18 f4       	brcc	.+6      	; 0x32a <_Z9selectsegh+0x12>
 324:	81 30       	cpi	r24, 0x01	; 1
 326:	31 f0       	breq	.+12     	; 0x334 <_Z9selectsegh+0x1c>
 328:	08 95       	ret
 32a:	83 30       	cpi	r24, 0x03	; 3
 32c:	39 f0       	breq	.+14     	; 0x33c <_Z9selectsegh+0x24>
 32e:	84 30       	cpi	r24, 0x04	; 4
 330:	39 f0       	breq	.+14     	; 0x340 <_Z9selectsegh+0x28>
 332:	08 95       	ret
 334:	ab 98       	cbi	0x15, 3	; 21
 336:	08 95       	ret
 338:	aa 98       	cbi	0x15, 2	; 21
 33a:	08 95       	ret
 33c:	a9 98       	cbi	0x15, 1	; 21
 33e:	08 95       	ret
 340:	a8 98       	cbi	0x15, 0	; 21
 342:	08 95       	ret

00000344 <_Z13init_switchesv>:
 344:	e9 e6       	ldi	r30, 0x69	; 105
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	10 82       	st	Z, r1
 34a:	11 82       	std	Z+1, r1	; 0x01
 34c:	10 86       	std	Z+8, r1	; 0x08
 34e:	33 e0       	ldi	r19, 0x03	; 3
 350:	33 83       	std	Z+3, r19	; 0x03
 352:	29 e1       	ldi	r18, 0x19	; 25
 354:	24 83       	std	Z+4, r18	; 0x04
 356:	12 82       	std	Z+2, r1	; 0x02
 358:	86 e3       	ldi	r24, 0x36	; 54
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	96 83       	std	Z+6, r25	; 0x06
 35e:	85 83       	std	Z+5, r24	; 0x05
 360:	41 e0       	ldi	r20, 0x01	; 1
 362:	47 83       	std	Z+7, r20	; 0x07
 364:	e0 e6       	ldi	r30, 0x60	; 96
 366:	f0 e0       	ldi	r31, 0x00	; 0
 368:	10 82       	st	Z, r1
 36a:	11 82       	std	Z+1, r1	; 0x01
 36c:	10 86       	std	Z+8, r1	; 0x08
 36e:	33 83       	std	Z+3, r19	; 0x03
 370:	24 83       	std	Z+4, r18	; 0x04
 372:	12 82       	std	Z+2, r1	; 0x02
 374:	96 83       	std	Z+6, r25	; 0x06
 376:	85 83       	std	Z+5, r24	; 0x05
 378:	82 e0       	ldi	r24, 0x02	; 2
 37a:	87 83       	std	Z+7, r24	; 0x07
 37c:	08 95       	ret

0000037e <_Z20print_number_decimalhjbh>:
 37e:	ef 92       	push	r14
 380:	ff 92       	push	r15
 382:	0f 93       	push	r16
 384:	1f 93       	push	r17
 386:	cf 93       	push	r28
 388:	df 93       	push	r29
 38a:	18 2f       	mov	r17, r24
 38c:	eb 01       	movw	r28, r22
 38e:	04 2f       	mov	r16, r20
 390:	e2 2e       	mov	r14, r18
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	c1 df       	rcall	.-126    	; 0x318 <_Z9selectsegh>
 396:	1a 30       	cpi	r17, 0x0A	; 10
 398:	20 f4       	brcc	.+8      	; 0x3a2 <_Z20print_number_decimalhjbh+0x24>
 39a:	81 2f       	mov	r24, r17
 39c:	66 df       	rcall	.-308    	; 0x26a <_Z6setsegh>
 39e:	95 98       	cbi	0x12, 5	; 18
 3a0:	1a c0       	rjmp	.+52     	; 0x3d6 <_Z20print_number_decimalhjbh+0x58>
 3a2:	8d ec       	ldi	r24, 0xCD	; 205
 3a4:	18 9f       	mul	r17, r24
 3a6:	f1 2c       	mov	r15, r1
 3a8:	11 24       	eor	r1, r1
 3aa:	f6 94       	lsr	r15
 3ac:	f6 94       	lsr	r15
 3ae:	f6 94       	lsr	r15
 3b0:	8f 2d       	mov	r24, r15
 3b2:	5b df       	rcall	.-330    	; 0x26a <_Z6setsegh>
 3b4:	8f e0       	ldi	r24, 0x0F	; 15
 3b6:	97 e2       	ldi	r25, 0x27	; 39
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <_Z20print_number_decimalhjbh+0x3a>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <_Z20print_number_decimalhjbh+0x40>
 3be:	00 00       	nop
 3c0:	82 e0       	ldi	r24, 0x02	; 2
 3c2:	aa df       	rcall	.-172    	; 0x318 <_Z9selectsegh>
 3c4:	ff 0c       	add	r15, r15
 3c6:	8f 2d       	mov	r24, r15
 3c8:	88 0f       	add	r24, r24
 3ca:	88 0f       	add	r24, r24
 3cc:	f8 0e       	add	r15, r24
 3ce:	81 2f       	mov	r24, r17
 3d0:	8f 19       	sub	r24, r15
 3d2:	4b df       	rcall	.-362    	; 0x26a <_Z6setsegh>
 3d4:	95 98       	cbi	0x12, 5	; 18
 3d6:	8f e0       	ldi	r24, 0x0F	; 15
 3d8:	97 e2       	ldi	r25, 0x27	; 39
 3da:	01 97       	sbiw	r24, 0x01	; 1
 3dc:	f1 f7       	brne	.-4      	; 0x3da <_Z20print_number_decimalhjbh+0x5c>
 3de:	00 c0       	rjmp	.+0      	; 0x3e0 <_Z20print_number_decimalhjbh+0x62>
 3e0:	00 00       	nop
 3e2:	ef e7       	ldi	r30, 0x7F	; 127
 3e4:	f0 e0       	ldi	r31, 0x00	; 0
 3e6:	9e 01       	movw	r18, r28
 3e8:	ad ec       	ldi	r26, 0xCD	; 205
 3ea:	bc ec       	ldi	r27, 0xCC	; 204
 3ec:	00 d3       	rcall	.+1536   	; 0x9ee <__umulhisi3>
 3ee:	ac 01       	movw	r20, r24
 3f0:	56 95       	lsr	r21
 3f2:	47 95       	ror	r20
 3f4:	56 95       	lsr	r21
 3f6:	47 95       	ror	r20
 3f8:	56 95       	lsr	r21
 3fa:	47 95       	ror	r20
 3fc:	9a 01       	movw	r18, r20
 3fe:	22 0f       	add	r18, r18
 400:	33 1f       	adc	r19, r19
 402:	ca 01       	movw	r24, r20
 404:	88 0f       	add	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	88 0f       	add	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	82 0f       	add	r24, r18
 412:	93 1f       	adc	r25, r19
 414:	9e 01       	movw	r18, r28
 416:	28 1b       	sub	r18, r24
 418:	39 0b       	sbc	r19, r25
 41a:	22 83       	std	Z+2, r18	; 0x02
 41c:	9a 01       	movw	r18, r20
 41e:	e7 d2       	rcall	.+1486   	; 0x9ee <__umulhisi3>
 420:	96 95       	lsr	r25
 422:	87 95       	ror	r24
 424:	96 95       	lsr	r25
 426:	87 95       	ror	r24
 428:	96 95       	lsr	r25
 42a:	87 95       	ror	r24
 42c:	9c 01       	movw	r18, r24
 42e:	22 0f       	add	r18, r18
 430:	33 1f       	adc	r19, r19
 432:	88 0f       	add	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	88 0f       	add	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	88 0f       	add	r24, r24
 43c:	99 1f       	adc	r25, r25
 43e:	82 0f       	add	r24, r18
 440:	93 1f       	adc	r25, r19
 442:	48 1b       	sub	r20, r24
 444:	59 0b       	sbc	r21, r25
 446:	41 83       	std	Z+1, r20	; 0x01
 448:	9e 01       	movw	r18, r28
 44a:	36 95       	lsr	r19
 44c:	27 95       	ror	r18
 44e:	36 95       	lsr	r19
 450:	27 95       	ror	r18
 452:	ab e7       	ldi	r26, 0x7B	; 123
 454:	b4 e1       	ldi	r27, 0x14	; 20
 456:	cb d2       	rcall	.+1430   	; 0x9ee <__umulhisi3>
 458:	ac 01       	movw	r20, r24
 45a:	56 95       	lsr	r21
 45c:	47 95       	ror	r20
 45e:	9a 01       	movw	r18, r20
 460:	ad ec       	ldi	r26, 0xCD	; 205
 462:	bc ec       	ldi	r27, 0xCC	; 204
 464:	c4 d2       	rcall	.+1416   	; 0x9ee <__umulhisi3>
 466:	96 95       	lsr	r25
 468:	87 95       	ror	r24
 46a:	96 95       	lsr	r25
 46c:	87 95       	ror	r24
 46e:	96 95       	lsr	r25
 470:	87 95       	ror	r24
 472:	9c 01       	movw	r18, r24
 474:	22 0f       	add	r18, r18
 476:	33 1f       	adc	r19, r19
 478:	88 0f       	add	r24, r24
 47a:	99 1f       	adc	r25, r25
 47c:	88 0f       	add	r24, r24
 47e:	99 1f       	adc	r25, r25
 480:	88 0f       	add	r24, r24
 482:	99 1f       	adc	r25, r25
 484:	82 0f       	add	r24, r18
 486:	93 1f       	adc	r25, r19
 488:	48 1b       	sub	r20, r24
 48a:	59 0b       	sbc	r21, r25
 48c:	40 83       	st	Z, r20
 48e:	41 11       	cpse	r20, r1
 490:	27 c0       	rjmp	.+78     	; 0x4e0 <__stack+0x81>
 492:	c2 e0       	ldi	r28, 0x02	; 2
 494:	26 c0       	rjmp	.+76     	; 0x4e2 <__stack+0x83>
 496:	cf 5f       	subi	r28, 0xFF	; 255
 498:	df 5f       	subi	r29, 0xFF	; 255
 49a:	8c 2f       	mov	r24, r28
 49c:	3d df       	rcall	.-390    	; 0x318 <_Z9selectsegh>
 49e:	ec 2f       	mov	r30, r28
 4a0:	f0 e0       	ldi	r31, 0x00	; 0
 4a2:	e3 58       	subi	r30, 0x83	; 131
 4a4:	ff 4f       	sbci	r31, 0xFF	; 255
 4a6:	80 81       	ld	r24, Z
 4a8:	e0 de       	rcall	.-576    	; 0x26a <_Z6setsegh>
 4aa:	c3 30       	cpi	r28, 0x03	; 3
 4ac:	59 f4       	brne	.+22     	; 0x4c4 <__stack+0x65>
 4ae:	31 e0       	ldi	r19, 0x01	; 1
 4b0:	e3 12       	cpse	r14, r19
 4b2:	08 c0       	rjmp	.+16     	; 0x4c4 <__stack+0x65>
 4b4:	95 98       	cbi	0x12, 5	; 18
 4b6:	8f e0       	ldi	r24, 0x0F	; 15
 4b8:	97 e2       	ldi	r25, 0x27	; 39
 4ba:	01 97       	sbiw	r24, 0x01	; 1
 4bc:	f1 f7       	brne	.-4      	; 0x4ba <__stack+0x5b>
 4be:	00 c0       	rjmp	.+0      	; 0x4c0 <__stack+0x61>
 4c0:	00 00       	nop
 4c2:	e9 cf       	rjmp	.-46     	; 0x496 <__stack+0x37>
 4c4:	95 9a       	sbi	0x12, 5	; 18
 4c6:	8f e0       	ldi	r24, 0x0F	; 15
 4c8:	97 e2       	ldi	r25, 0x27	; 39
 4ca:	01 97       	sbiw	r24, 0x01	; 1
 4cc:	f1 f7       	brne	.-4      	; 0x4ca <__stack+0x6b>
 4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <__stack+0x71>
 4d0:	00 00       	nop
 4d2:	d5 30       	cpi	r29, 0x05	; 5
 4d4:	00 f3       	brcs	.-64     	; 0x496 <__stack+0x37>
 4d6:	07 c0       	rjmp	.+14     	; 0x4e6 <__stack+0x87>
 4d8:	d2 e0       	ldi	r29, 0x02	; 2
 4da:	dc 0f       	add	r29, r28
 4dc:	cf 5f       	subi	r28, 0xFF	; 255
 4de:	dd cf       	rjmp	.-70     	; 0x49a <__stack+0x3b>
 4e0:	c1 e0       	ldi	r28, 0x01	; 1
 4e2:	01 11       	cpse	r16, r1
 4e4:	f9 cf       	rjmp	.-14     	; 0x4d8 <__stack+0x79>
 4e6:	df 91       	pop	r29
 4e8:	cf 91       	pop	r28
 4ea:	1f 91       	pop	r17
 4ec:	0f 91       	pop	r16
 4ee:	ff 90       	pop	r15
 4f0:	ef 90       	pop	r14
 4f2:	08 95       	ret

000004f4 <_Z16print_statusbytehh>:
 4f4:	cf 93       	push	r28
 4f6:	df 93       	push	r29
 4f8:	d8 2f       	mov	r29, r24
 4fa:	c6 2f       	mov	r28, r22
 4fc:	66 ff       	sbrs	r22, 6
 4fe:	17 c0       	rjmp	.+46     	; 0x52e <_Z16print_statusbytehh+0x3a>
 500:	81 e0       	ldi	r24, 0x01	; 1
 502:	0a df       	rcall	.-492    	; 0x318 <_Z9selectsegh>
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	b1 de       	rcall	.-670    	; 0x26a <_Z6setsegh>
 508:	95 9a       	sbi	0x12, 5	; 18
 50a:	8f e0       	ldi	r24, 0x0F	; 15
 50c:	97 e2       	ldi	r25, 0x27	; 39
 50e:	01 97       	sbiw	r24, 0x01	; 1
 510:	f1 f7       	brne	.-4      	; 0x50e <_Z16print_statusbytehh+0x1a>
 512:	00 c0       	rjmp	.+0      	; 0x514 <_Z16print_statusbytehh+0x20>
 514:	00 00       	nop
 516:	82 e0       	ldi	r24, 0x02	; 2
 518:	ff de       	rcall	.-514    	; 0x318 <_Z9selectsegh>
 51a:	83 e1       	ldi	r24, 0x13	; 19
 51c:	a6 de       	rcall	.-692    	; 0x26a <_Z6setsegh>
 51e:	95 9a       	sbi	0x12, 5	; 18
 520:	8f e0       	ldi	r24, 0x0F	; 15
 522:	97 e2       	ldi	r25, 0x27	; 39
 524:	01 97       	sbiw	r24, 0x01	; 1
 526:	f1 f7       	brne	.-4      	; 0x524 <_Z16print_statusbytehh+0x30>
 528:	00 c0       	rjmp	.+0      	; 0x52a <_Z16print_statusbytehh+0x36>
 52a:	00 00       	nop
 52c:	2d c0       	rjmp	.+90     	; 0x588 <_Z16print_statusbytehh+0x94>
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	f3 de       	rcall	.-538    	; 0x318 <_Z9selectsegh>
 532:	8f ef       	ldi	r24, 0xFF	; 255
 534:	9a de       	rcall	.-716    	; 0x26a <_Z6setsegh>
 536:	c2 ff       	sbrs	r28, 2
 538:	02 c0       	rjmp	.+4      	; 0x53e <_Z16print_statusbytehh+0x4a>
 53a:	8b e0       	ldi	r24, 0x0B	; 11
 53c:	96 de       	rcall	.-724    	; 0x26a <_Z6setsegh>
 53e:	c3 ff       	sbrs	r28, 3
 540:	02 c0       	rjmp	.+4      	; 0x546 <_Z16print_statusbytehh+0x52>
 542:	8c e0       	ldi	r24, 0x0C	; 12
 544:	92 de       	rcall	.-732    	; 0x26a <_Z6setsegh>
 546:	95 9a       	sbi	0x12, 5	; 18
 548:	8f e0       	ldi	r24, 0x0F	; 15
 54a:	97 e2       	ldi	r25, 0x27	; 39
 54c:	01 97       	sbiw	r24, 0x01	; 1
 54e:	f1 f7       	brne	.-4      	; 0x54c <_Z16print_statusbytehh+0x58>
 550:	00 c0       	rjmp	.+0      	; 0x552 <_Z16print_statusbytehh+0x5e>
 552:	00 00       	nop
 554:	82 e0       	ldi	r24, 0x02	; 2
 556:	e0 de       	rcall	.-576    	; 0x318 <_Z9selectsegh>
 558:	8f ef       	ldi	r24, 0xFF	; 255
 55a:	87 de       	rcall	.-754    	; 0x26a <_Z6setsegh>
 55c:	d2 ff       	sbrs	r29, 2
 55e:	02 c0       	rjmp	.+4      	; 0x564 <_Z16print_statusbytehh+0x70>
 560:	80 e1       	ldi	r24, 0x10	; 16
 562:	83 de       	rcall	.-762    	; 0x26a <_Z6setsegh>
 564:	d3 ff       	sbrs	r29, 3
 566:	02 c0       	rjmp	.+4      	; 0x56c <_Z16print_statusbytehh+0x78>
 568:	81 e1       	ldi	r24, 0x11	; 17
 56a:	7f de       	rcall	.-770    	; 0x26a <_Z6setsegh>
 56c:	8d 2f       	mov	r24, r29
 56e:	8c 70       	andi	r24, 0x0C	; 12
 570:	8c 30       	cpi	r24, 0x0C	; 12
 572:	11 f4       	brne	.+4      	; 0x578 <_Z16print_statusbytehh+0x84>
 574:	82 e1       	ldi	r24, 0x12	; 18
 576:	79 de       	rcall	.-782    	; 0x26a <_Z6setsegh>
 578:	c0 fd       	sbrc	r28, 0
 57a:	95 98       	cbi	0x12, 5	; 18
 57c:	8f e0       	ldi	r24, 0x0F	; 15
 57e:	97 e2       	ldi	r25, 0x27	; 39
 580:	01 97       	sbiw	r24, 0x01	; 1
 582:	f1 f7       	brne	.-4      	; 0x580 <_Z16print_statusbytehh+0x8c>
 584:	00 c0       	rjmp	.+0      	; 0x586 <_Z16print_statusbytehh+0x92>
 586:	00 00       	nop
 588:	cc 23       	and	r28, r28
 58a:	bc f4       	brge	.+46     	; 0x5ba <_Z16print_statusbytehh+0xc6>
 58c:	83 e0       	ldi	r24, 0x03	; 3
 58e:	c4 de       	rcall	.-632    	; 0x318 <_Z9selectsegh>
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	6b de       	rcall	.-810    	; 0x26a <_Z6setsegh>
 594:	95 9a       	sbi	0x12, 5	; 18
 596:	8f e0       	ldi	r24, 0x0F	; 15
 598:	97 e2       	ldi	r25, 0x27	; 39
 59a:	01 97       	sbiw	r24, 0x01	; 1
 59c:	f1 f7       	brne	.-4      	; 0x59a <_Z16print_statusbytehh+0xa6>
 59e:	00 c0       	rjmp	.+0      	; 0x5a0 <_Z16print_statusbytehh+0xac>
 5a0:	00 00       	nop
 5a2:	84 e0       	ldi	r24, 0x04	; 4
 5a4:	b9 de       	rcall	.-654    	; 0x318 <_Z9selectsegh>
 5a6:	83 e1       	ldi	r24, 0x13	; 19
 5a8:	60 de       	rcall	.-832    	; 0x26a <_Z6setsegh>
 5aa:	95 9a       	sbi	0x12, 5	; 18
 5ac:	8f e0       	ldi	r24, 0x0F	; 15
 5ae:	97 e2       	ldi	r25, 0x27	; 39
 5b0:	01 97       	sbiw	r24, 0x01	; 1
 5b2:	f1 f7       	brne	.-4      	; 0x5b0 <_Z16print_statusbytehh+0xbc>
 5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <_Z16print_statusbytehh+0xc2>
 5b6:	00 00       	nop
 5b8:	2c c0       	rjmp	.+88     	; 0x612 <_Z16print_statusbytehh+0x11e>
 5ba:	83 e0       	ldi	r24, 0x03	; 3
 5bc:	ad de       	rcall	.-678    	; 0x318 <_Z9selectsegh>
 5be:	8f ef       	ldi	r24, 0xFF	; 255
 5c0:	54 de       	rcall	.-856    	; 0x26a <_Z6setsegh>
 5c2:	c4 ff       	sbrs	r28, 4
 5c4:	02 c0       	rjmp	.+4      	; 0x5ca <_Z16print_statusbytehh+0xd6>
 5c6:	8b e0       	ldi	r24, 0x0B	; 11
 5c8:	50 de       	rcall	.-864    	; 0x26a <_Z6setsegh>
 5ca:	c5 ff       	sbrs	r28, 5
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <_Z16print_statusbytehh+0xde>
 5ce:	8c e0       	ldi	r24, 0x0C	; 12
 5d0:	4c de       	rcall	.-872    	; 0x26a <_Z6setsegh>
 5d2:	95 9a       	sbi	0x12, 5	; 18
 5d4:	8f e0       	ldi	r24, 0x0F	; 15
 5d6:	97 e2       	ldi	r25, 0x27	; 39
 5d8:	01 97       	sbiw	r24, 0x01	; 1
 5da:	f1 f7       	brne	.-4      	; 0x5d8 <_Z16print_statusbytehh+0xe4>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <_Z16print_statusbytehh+0xea>
 5de:	00 00       	nop
 5e0:	84 e0       	ldi	r24, 0x04	; 4
 5e2:	9a de       	rcall	.-716    	; 0x318 <_Z9selectsegh>
 5e4:	8f ef       	ldi	r24, 0xFF	; 255
 5e6:	41 de       	rcall	.-894    	; 0x26a <_Z6setsegh>
 5e8:	d4 ff       	sbrs	r29, 4
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <_Z16print_statusbytehh+0xfc>
 5ec:	80 e1       	ldi	r24, 0x10	; 16
 5ee:	3d de       	rcall	.-902    	; 0x26a <_Z6setsegh>
 5f0:	d5 ff       	sbrs	r29, 5
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <_Z16print_statusbytehh+0x104>
 5f4:	81 e1       	ldi	r24, 0x11	; 17
 5f6:	39 de       	rcall	.-910    	; 0x26a <_Z6setsegh>
 5f8:	d0 73       	andi	r29, 0x30	; 48
 5fa:	d0 33       	cpi	r29, 0x30	; 48
 5fc:	11 f4       	brne	.+4      	; 0x602 <_Z16print_statusbytehh+0x10e>
 5fe:	82 e1       	ldi	r24, 0x12	; 18
 600:	34 de       	rcall	.-920    	; 0x26a <_Z6setsegh>
 602:	c1 fd       	sbrc	r28, 1
 604:	95 98       	cbi	0x12, 5	; 18
 606:	8f e0       	ldi	r24, 0x0F	; 15
 608:	97 e2       	ldi	r25, 0x27	; 39
 60a:	01 97       	sbiw	r24, 0x01	; 1
 60c:	f1 f7       	brne	.-4      	; 0x60a <_Z16print_statusbytehh+0x116>
 60e:	00 c0       	rjmp	.+0      	; 0x610 <_Z16print_statusbytehh+0x11c>
 610:	00 00       	nop
 612:	df 91       	pop	r29
 614:	cf 91       	pop	r28
 616:	08 95       	ret

00000618 <main>:

int main(void)
{

	
	DDRC = DIG1 | DIG2 | DIG3 | DIG4;
 618:	8f e0       	ldi	r24, 0x0F	; 15
 61a:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFF; // All segments in a D port connected to cathodes
 61c:	8f ef       	ldi	r24, 0xFF	; 255
 61e:	81 bb       	out	0x11, r24	; 17
	
	DDRB = LED3 | LED2;
 620:	84 e1       	ldi	r24, 0x14	; 20
 622:	87 bb       	out	0x17, r24	; 23
	
	// set up timer0
    TCCR2 = (1 << CS22)|(1 << CS21)|(1 << CS20); //1024 divider
 624:	87 e0       	ldi	r24, 0x07	; 7
 626:	85 bd       	out	0x25, r24	; 37
		
	TCNT2 = 0;
 628:	14 bc       	out	0x24, r1	; 36
		
	TIFR = (1<<TOV2);
 62a:	80 e4       	ldi	r24, 0x40	; 64
 62c:	88 bf       	out	0x38, r24	; 56
	TIMSK = (1<<TOIE2);
 62e:	89 bf       	out	0x39, r24	; 57
	
	CurrScreen = 0;	
 630:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <CurrScreen>
    
	i2c_init_slave(I2C_SLAVE_ADDR);
 634:	8e ec       	ldi	r24, 0xCE	; 206
 636:	61 dd       	rcall	.-1342   	; 0xfa <_Z14i2c_init_slaveh>
	
	init_switches();
 638:	85 de       	rcall	.-758    	; 0x344 <_Z13init_switchesv>
	    
    sei();
 63a:	78 94       	sei
	
	while (1) 
    {
		//asm("wdr"); 
		
		 statusbyte0 = i2cdata_[1];
 63c:	c4 e8       	ldi	r28, 0x84	; 132
 63e:	d0 e0       	ldi	r29, 0x00	; 0
		 i2cdata_[4] = paramtodisp_addr;
		 i2cdata_[5] = paramfromdisp;
		 i2cdata_[6] = paramfromdisp_addr;
		
		
		if (Key1.outstate && (!Key1_lock)) {
 640:	0f 2e       	mov	r0, r31
 642:	f9 e6       	ldi	r31, 0x69	; 105
 644:	cf 2e       	mov	r12, r31
 646:	f0 e0       	ldi	r31, 0x00	; 0
 648:	df 2e       	mov	r13, r31
 64a:	f0 2d       	mov	r31, r0
			Key1_lock = 1;
 64c:	11 e0       	ldi	r17, 0x01	; 1
			     if (paramtodisp > 0) paramtodisp--;
	        }   else
	        {
		         if (CurrScreen > 0) CurrScreen--;
		         else
		        CurrScreen = SCREENS;
 64e:	01 e2       	ldi	r16, 0x21	; 33
	       }
		 }
		 if (!Key1.outstate) Key1_lock = 0;
		 
		 if (Key2.outstate && (!Key2_lock)) {
 650:	0f 2e       	mov	r0, r31
 652:	f0 e6       	ldi	r31, 0x60	; 96
 654:	ef 2e       	mov	r14, r31
 656:	f0 e0       	ldi	r31, 0x00	; 0
 658:	ff 2e       	mov	r15, r31
 65a:	f0 2d       	mov	r31, r0
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 31:    paramtodisp_addr = CurrScreen;
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),2);
			            break;
			case 32:    paramtodisp_addr = CurrScreen;
 65c:	68 94       	set
 65e:	44 24       	eor	r4, r4
 660:	45 f8       	bld	r4, 5
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 30:    paramtodisp_addr = CurrScreen;
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 31:    paramtodisp_addr = CurrScreen;
 662:	0f 2e       	mov	r0, r31
 664:	ff e1       	ldi	r31, 0x1F	; 31
 666:	5f 2e       	mov	r5, r31
 668:	f0 2d       	mov	r31, r0
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
			            break;	
			case 20 ... 29:     paramtodisp_addr = CurrScreen;
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 30:    paramtodisp_addr = CurrScreen;
 66a:	0f 2e       	mov	r0, r31
 66c:	fe e1       	ldi	r31, 0x1E	; 30
 66e:	6f 2e       	mov	r6, r31
 670:	f0 2d       	mov	r31, r0
			            print_number_decimal(7, paramtodisp,!(Setup_param && blink_bus),0);
			            break;	
			case 8:     paramtodisp_addr = ADDR_CMD_R;
			            print_number_decimal(8, paramtodisp,!(Setup_param && blink_bus),1);
			            break;	
			case 9:     paramtodisp_addr = ADDR_ENABLE_R;
 672:	0f 2e       	mov	r0, r31
 674:	f9 e0       	ldi	r31, 0x09	; 9
 676:	7f 2e       	mov	r7, r31
 678:	f0 2d       	mov	r31, r0
			            print_number_decimal(6, paramtodisp,!(Setup_param && blink_bus),0);
			            break;				
			case 7:     paramtodisp_addr = ADDR_PERSENTAGE_R;
			            print_number_decimal(7, paramtodisp,!(Setup_param && blink_bus),0);
			            break;	
			case 8:     paramtodisp_addr = ADDR_CMD_R;
 67a:	68 94       	set
 67c:	88 24       	eor	r8, r8
 67e:	83 f8       	bld	r8, 3
			            print_number_decimal(5, paramtodisp,!(Setup_param && blink_bus),1);
			            break;	
			case 6:     paramtodisp_addr = ADDR_ENABLE_L;
			            print_number_decimal(6, paramtodisp,!(Setup_param && blink_bus),0);
			            break;				
			case 7:     paramtodisp_addr = ADDR_PERSENTAGE_R;
 680:	0f 2e       	mov	r0, r31
 682:	f7 e0       	ldi	r31, 0x07	; 7
 684:	9f 2e       	mov	r9, r31
 686:	f0 2d       	mov	r31, r0
			            print_number_decimal(4, paramtodisp,!(Setup_param && blink_bus),0);
			            break;				
			case 5:     paramtodisp_addr = ADDR_CMD_L;
			            print_number_decimal(5, paramtodisp,!(Setup_param && blink_bus),1);
			            break;	
			case 6:     paramtodisp_addr = ADDR_ENABLE_L;
 688:	0f 2e       	mov	r0, r31
 68a:	f6 e0       	ldi	r31, 0x06	; 6
 68c:	af 2e       	mov	r10, r31
 68e:	f0 2d       	mov	r31, r0
			            print_number_decimal(3, paramtodisp,!(Setup_param && blink_bus),1);
						break;
			case 4:     paramtodisp_addr = ADDR_PERSENTAGE_L;
			            print_number_decimal(4, paramtodisp,!(Setup_param && blink_bus),0);
			            break;				
			case 5:     paramtodisp_addr = ADDR_CMD_L;
 690:	0f 2e       	mov	r0, r31
 692:	f5 e0       	ldi	r31, 0x05	; 5
 694:	bf 2e       	mov	r11, r31
 696:	f0 2d       	mov	r31, r0
	
	while (1) 
    {
		//asm("wdr"); 
		
		 statusbyte0 = i2cdata_[1];
 698:	89 81       	ldd	r24, Y+1	; 0x01
 69a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <statusbyte0>
		 statusbyte1 = i2cdata_[2];
 69e:	9a 81       	ldd	r25, Y+2	; 0x02
 6a0:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <statusbyte1>
		 if (!Setup_param) paramtodisp = i2cdata_[3];
 6a4:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <Setup_param>
 6a8:	91 11       	cpse	r25, r1
 6aa:	03 c0       	rjmp	.+6      	; 0x6b2 <main+0x9a>
 6ac:	2b 81       	ldd	r18, Y+3	; 0x03
 6ae:	20 93 78 00 	sts	0x0078, r18	; 0x800078 <paramtodisp>
		 i2cdata_[4] = paramtodisp_addr;
 6b2:	20 91 77 00 	lds	r18, 0x0077	; 0x800077 <paramtodisp_addr>
 6b6:	2c 83       	std	Y+4, r18	; 0x04
		 i2cdata_[5] = paramfromdisp;
 6b8:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <paramfromdisp>
 6bc:	2d 83       	std	Y+5, r18	; 0x05
		 i2cdata_[6] = paramfromdisp_addr;
 6be:	20 91 75 00 	lds	r18, 0x0075	; 0x800075 <paramfromdisp_addr>
 6c2:	2e 83       	std	Y+6, r18	; 0x06
		
		
		if (Key1.outstate && (!Key1_lock)) {
 6c4:	f6 01       	movw	r30, r12
 6c6:	20 81       	ld	r18, Z
 6c8:	22 23       	and	r18, r18
 6ca:	09 f4       	brne	.+2      	; 0x6ce <main+0xb6>
 6cc:	87 c1       	rjmp	.+782    	; 0x9dc <main+0x3c4>
 6ce:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <Key1_lock>
 6d2:	21 11       	cpse	r18, r1
 6d4:	16 c0       	rjmp	.+44     	; 0x702 <main+0xea>
			Key1_lock = 1;
 6d6:	10 93 7e 00 	sts	0x007E, r17	; 0x80007e <Key1_lock>
			
		    if (Setup_param)
 6da:	99 23       	and	r25, r25
 6dc:	41 f0       	breq	.+16     	; 0x6ee <main+0xd6>
	        {
			     if (paramtodisp > 0) paramtodisp--;
 6de:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <paramtodisp>
 6e2:	22 23       	and	r18, r18
 6e4:	71 f0       	breq	.+28     	; 0x702 <main+0xea>
 6e6:	21 50       	subi	r18, 0x01	; 1
 6e8:	20 93 78 00 	sts	0x0078, r18	; 0x800078 <paramtodisp>
 6ec:	0a c0       	rjmp	.+20     	; 0x702 <main+0xea>
	        }   else
	        {
		         if (CurrScreen > 0) CurrScreen--;
 6ee:	20 91 7b 00 	lds	r18, 0x007B	; 0x80007b <CurrScreen>
 6f2:	22 23       	and	r18, r18
 6f4:	21 f0       	breq	.+8      	; 0x6fe <main+0xe6>
 6f6:	21 50       	subi	r18, 0x01	; 1
 6f8:	20 93 7b 00 	sts	0x007B, r18	; 0x80007b <CurrScreen>
 6fc:	02 c0       	rjmp	.+4      	; 0x702 <main+0xea>
		         else
		        CurrScreen = SCREENS;
 6fe:	00 93 7b 00 	sts	0x007B, r16	; 0x80007b <CurrScreen>
	       }
		 }
		 if (!Key1.outstate) Key1_lock = 0;
		 
		 if (Key2.outstate && (!Key2_lock)) {
 702:	f7 01       	movw	r30, r14
 704:	20 81       	ld	r18, Z
 706:	22 23       	and	r18, r18
 708:	09 f4       	brne	.+2      	; 0x70c <main+0xf4>
 70a:	6b c1       	rjmp	.+726    	; 0x9e2 <main+0x3ca>
 70c:	20 91 7d 00 	lds	r18, 0x007D	; 0x80007d <Key2_lock>
 710:	21 11       	cpse	r18, r1
 712:	14 c0       	rjmp	.+40     	; 0x73c <main+0x124>
			 
			 Key2_lock = 1;
 714:	10 93 7d 00 	sts	0x007D, r17	; 0x80007d <Key2_lock>
			 
			 if (Setup_param)
 718:	99 23       	and	r25, r25
 71a:	31 f0       	breq	.+12     	; 0x728 <main+0x110>
			 {
				 paramtodisp++;
 71c:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <paramtodisp>
 720:	2f 5f       	subi	r18, 0xFF	; 255
 722:	20 93 78 00 	sts	0x0078, r18	; 0x800078 <paramtodisp>
 726:	0a c0       	rjmp	.+20     	; 0x73c <main+0x124>
			 } else
			 {
			    if (CurrScreen < SCREENS) CurrScreen++;
 728:	20 91 7b 00 	lds	r18, 0x007B	; 0x80007b <CurrScreen>
 72c:	21 32       	cpi	r18, 0x21	; 33
 72e:	20 f4       	brcc	.+8      	; 0x738 <main+0x120>
 730:	2f 5f       	subi	r18, 0xFF	; 255
 732:	20 93 7b 00 	sts	0x007B, r18	; 0x80007b <CurrScreen>
 736:	02 c0       	rjmp	.+4      	; 0x73c <main+0x124>
			    else
			       CurrScreen = 0;
 738:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <CurrScreen>
		 }	 
		 
		 if (!Key2.outstate) Key2_lock = 0;
		 
		 
		 if (Key2.long_outstate && (!Key2_lock_long) && (CurrScreen > 0)) 
 73c:	f7 01       	movw	r30, r14
 73e:	21 81       	ldd	r18, Z+1	; 0x01
 740:	22 23       	and	r18, r18
 742:	09 f4       	brne	.+2      	; 0x746 <main+0x12e>
 744:	51 c1       	rjmp	.+674    	; 0x9e8 <main+0x3d0>
 746:	20 91 7c 00 	lds	r18, 0x007C	; 0x80007c <Key2_lock_long>
 74a:	21 11       	cpse	r18, r1
 74c:	09 c0       	rjmp	.+18     	; 0x760 <main+0x148>
 74e:	20 91 7b 00 	lds	r18, 0x007B	; 0x80007b <CurrScreen>
 752:	22 23       	and	r18, r18
 754:	29 f0       	breq	.+10     	; 0x760 <main+0x148>
		 {
		      Key2_lock_long = 1;
 756:	10 93 7c 00 	sts	0x007C, r17	; 0x80007c <Key2_lock_long>
			  Setup_param = !Setup_param;
 75a:	91 27       	eor	r25, r17
 75c:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <Setup_param>
		 }
		 
		 if (!Key2.long_outstate) Key2_lock_long = 0;
		 

		 if (statusbyte0 & (1 << STATUS_BIT0_L_ON)) 
 760:	80 ff       	sbrs	r24, 0
 762:	02 c0       	rjmp	.+4      	; 0x768 <main+0x150>
		 { 
			 PORTB |=LED3;
 764:	c2 9a       	sbi	0x18, 2	; 24
 766:	01 c0       	rjmp	.+2      	; 0x76a <main+0x152>
		 }
		 
		 else PORTB &= ~ (LED3);
 768:	c2 98       	cbi	0x18, 2	; 24
		 
		if (statusbyte0 & (1 << STATUS_BIT0_R_ON))
 76a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <statusbyte0>
 76e:	81 ff       	sbrs	r24, 1
 770:	02 c0       	rjmp	.+4      	; 0x776 <main+0x15e>
		{
			PORTB |=LED2;
 772:	c4 9a       	sbi	0x18, 4	; 24
 774:	01 c0       	rjmp	.+2      	; 0x778 <main+0x160>
		}
		
		else PORTB &= ~ (LED2);		 
 776:	c4 98       	cbi	0x18, 4	; 24
		 
		switch(CurrScreen)
 778:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <CurrScreen>
 77c:	48 2f       	mov	r20, r24
 77e:	50 e0       	ldi	r21, 0x00	; 0
 780:	42 32       	cpi	r20, 0x22	; 34
 782:	51 05       	cpc	r21, r1
 784:	08 f0       	brcs	.+2      	; 0x788 <main+0x170>
 786:	18 c1       	rjmp	.+560    	; 0x9b8 <main+0x3a0>
 788:	fa 01       	movw	r30, r20
 78a:	e9 5d       	subi	r30, 0xD9	; 217
 78c:	ff 4f       	sbci	r31, 0xFF	; 255
 78e:	09 94       	ijmp
		{
			case 0: 	print_statusbyte(statusbyte0,statusbyte1);
 790:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <statusbyte1>
 794:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <statusbyte0>
 798:	ad de       	rcall	.-678    	; 0x4f4 <_Z16print_statusbytehh>
			            break;
 79a:	0e c1       	rjmp	.+540    	; 0x9b8 <main+0x3a0>
			
			case 1: 	paramtodisp_addr = ADDR_WAIT_SEC_UP;
 79c:	10 93 77 00 	sts	0x0077, r17	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(1, paramtodisp,!(Setup_param && blink_bus),1);
 7a0:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 7a4:	88 23       	and	r24, r24
 7a6:	21 f0       	breq	.+8      	; 0x7b0 <main+0x198>
 7a8:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 7ac:	41 27       	eor	r20, r17
 7ae:	01 c0       	rjmp	.+2      	; 0x7b2 <main+0x19a>
 7b0:	41 2f       	mov	r20, r17
 7b2:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 7b6:	70 e0       	ldi	r23, 0x00	; 0
 7b8:	21 2f       	mov	r18, r17
 7ba:	81 2f       	mov	r24, r17
 7bc:	e0 dd       	rcall	.-1088   	; 0x37e <_Z20print_number_decimalhjbh>
						break;
 7be:	fc c0       	rjmp	.+504    	; 0x9b8 <main+0x3a0>
						
			case 2:     paramtodisp_addr = ADDR_WAIT_SEC_DOWN;
 7c0:	82 e0       	ldi	r24, 0x02	; 2
 7c2:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(2, paramtodisp,!(Setup_param && blink_bus),1);
 7c6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 7ca:	88 23       	and	r24, r24
 7cc:	21 f0       	breq	.+8      	; 0x7d6 <main+0x1be>
 7ce:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 7d2:	41 27       	eor	r20, r17
 7d4:	01 c0       	rjmp	.+2      	; 0x7d8 <main+0x1c0>
 7d6:	41 2f       	mov	r20, r17
 7d8:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 7dc:	70 e0       	ldi	r23, 0x00	; 0
 7de:	21 2f       	mov	r18, r17
 7e0:	82 e0       	ldi	r24, 0x02	; 2
 7e2:	cd dd       	rcall	.-1126   	; 0x37e <_Z20print_number_decimalhjbh>
						break;
 7e4:	e9 c0       	rjmp	.+466    	; 0x9b8 <main+0x3a0>
			
			case 3:     paramtodisp_addr = ADDR_WAIT_SEC_LOCK;
 7e6:	83 e0       	ldi	r24, 0x03	; 3
 7e8:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(3, paramtodisp,!(Setup_param && blink_bus),1);
 7ec:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 7f0:	88 23       	and	r24, r24
 7f2:	21 f0       	breq	.+8      	; 0x7fc <main+0x1e4>
 7f4:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 7f8:	41 27       	eor	r20, r17
 7fa:	01 c0       	rjmp	.+2      	; 0x7fe <main+0x1e6>
 7fc:	41 2f       	mov	r20, r17
 7fe:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 802:	70 e0       	ldi	r23, 0x00	; 0
 804:	21 2f       	mov	r18, r17
 806:	83 e0       	ldi	r24, 0x03	; 3
 808:	ba dd       	rcall	.-1164   	; 0x37e <_Z20print_number_decimalhjbh>
						break;
 80a:	d6 c0       	rjmp	.+428    	; 0x9b8 <main+0x3a0>
			case 4:     paramtodisp_addr = ADDR_PERSENTAGE_L;
 80c:	84 e0       	ldi	r24, 0x04	; 4
 80e:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(4, paramtodisp,!(Setup_param && blink_bus),0);
 812:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 816:	88 23       	and	r24, r24
 818:	21 f0       	breq	.+8      	; 0x822 <main+0x20a>
 81a:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 81e:	41 27       	eor	r20, r17
 820:	01 c0       	rjmp	.+2      	; 0x824 <main+0x20c>
 822:	41 2f       	mov	r20, r17
 824:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 828:	70 e0       	ldi	r23, 0x00	; 0
 82a:	20 e0       	ldi	r18, 0x00	; 0
 82c:	84 e0       	ldi	r24, 0x04	; 4
 82e:	a7 dd       	rcall	.-1202   	; 0x37e <_Z20print_number_decimalhjbh>
			            break;				
 830:	c3 c0       	rjmp	.+390    	; 0x9b8 <main+0x3a0>
			case 5:     paramtodisp_addr = ADDR_CMD_L;
 832:	b0 92 77 00 	sts	0x0077, r11	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(5, paramtodisp,!(Setup_param && blink_bus),1);
 836:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 83a:	88 23       	and	r24, r24
 83c:	21 f0       	breq	.+8      	; 0x846 <main+0x22e>
 83e:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 842:	41 27       	eor	r20, r17
 844:	01 c0       	rjmp	.+2      	; 0x848 <main+0x230>
 846:	41 2f       	mov	r20, r17
 848:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 84c:	70 e0       	ldi	r23, 0x00	; 0
 84e:	21 2f       	mov	r18, r17
 850:	8b 2d       	mov	r24, r11
 852:	95 dd       	rcall	.-1238   	; 0x37e <_Z20print_number_decimalhjbh>
			            break;	
 854:	b1 c0       	rjmp	.+354    	; 0x9b8 <main+0x3a0>
			case 6:     paramtodisp_addr = ADDR_ENABLE_L;
 856:	a0 92 77 00 	sts	0x0077, r10	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(6, paramtodisp,!(Setup_param && blink_bus),0);
 85a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 85e:	88 23       	and	r24, r24
 860:	21 f0       	breq	.+8      	; 0x86a <main+0x252>
 862:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 866:	41 27       	eor	r20, r17
 868:	01 c0       	rjmp	.+2      	; 0x86c <main+0x254>
 86a:	41 2f       	mov	r20, r17
 86c:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 870:	70 e0       	ldi	r23, 0x00	; 0
 872:	20 e0       	ldi	r18, 0x00	; 0
 874:	8a 2d       	mov	r24, r10
 876:	83 dd       	rcall	.-1274   	; 0x37e <_Z20print_number_decimalhjbh>
			            break;				
 878:	9f c0       	rjmp	.+318    	; 0x9b8 <main+0x3a0>
			case 7:     paramtodisp_addr = ADDR_PERSENTAGE_R;
 87a:	90 92 77 00 	sts	0x0077, r9	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(7, paramtodisp,!(Setup_param && blink_bus),0);
 87e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 882:	88 23       	and	r24, r24
 884:	21 f0       	breq	.+8      	; 0x88e <main+0x276>
 886:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 88a:	41 27       	eor	r20, r17
 88c:	01 c0       	rjmp	.+2      	; 0x890 <main+0x278>
 88e:	41 2f       	mov	r20, r17
 890:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 894:	70 e0       	ldi	r23, 0x00	; 0
 896:	20 e0       	ldi	r18, 0x00	; 0
 898:	89 2d       	mov	r24, r9
 89a:	71 dd       	rcall	.-1310   	; 0x37e <_Z20print_number_decimalhjbh>
			            break;	
 89c:	8d c0       	rjmp	.+282    	; 0x9b8 <main+0x3a0>
			case 8:     paramtodisp_addr = ADDR_CMD_R;
 89e:	80 92 77 00 	sts	0x0077, r8	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(8, paramtodisp,!(Setup_param && blink_bus),1);
 8a2:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 8a6:	88 23       	and	r24, r24
 8a8:	21 f0       	breq	.+8      	; 0x8b2 <main+0x29a>
 8aa:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 8ae:	41 27       	eor	r20, r17
 8b0:	01 c0       	rjmp	.+2      	; 0x8b4 <main+0x29c>
 8b2:	41 2f       	mov	r20, r17
 8b4:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 8b8:	70 e0       	ldi	r23, 0x00	; 0
 8ba:	21 2f       	mov	r18, r17
 8bc:	88 2d       	mov	r24, r8
 8be:	5f dd       	rcall	.-1346   	; 0x37e <_Z20print_number_decimalhjbh>
			            break;	
 8c0:	7b c0       	rjmp	.+246    	; 0x9b8 <main+0x3a0>
			case 9:     paramtodisp_addr = ADDR_ENABLE_R;
 8c2:	70 92 77 00 	sts	0x0077, r7	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(9, paramtodisp,!(Setup_param && blink_bus),0);
 8c6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 8ca:	88 23       	and	r24, r24
 8cc:	21 f0       	breq	.+8      	; 0x8d6 <main+0x2be>
 8ce:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 8d2:	41 27       	eor	r20, r17
 8d4:	01 c0       	rjmp	.+2      	; 0x8d8 <main+0x2c0>
 8d6:	41 2f       	mov	r20, r17
 8d8:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 8dc:	70 e0       	ldi	r23, 0x00	; 0
 8de:	20 e0       	ldi	r18, 0x00	; 0
 8e0:	87 2d       	mov	r24, r7
 8e2:	4d dd       	rcall	.-1382   	; 0x37e <_Z20print_number_decimalhjbh>
			            break;	
 8e4:	69 c0       	rjmp	.+210    	; 0x9b8 <main+0x3a0>
			case 10 ... 19:     paramtodisp_addr = CurrScreen;
 8e6:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 8ea:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <Setup_param>
 8ee:	99 23       	and	r25, r25
 8f0:	21 f0       	breq	.+8      	; 0x8fa <main+0x2e2>
 8f2:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 8f6:	41 27       	eor	r20, r17
 8f8:	01 c0       	rjmp	.+2      	; 0x8fc <main+0x2e4>
 8fa:	41 2f       	mov	r20, r17
 8fc:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 900:	70 e0       	ldi	r23, 0x00	; 0
 902:	20 e0       	ldi	r18, 0x00	; 0
 904:	3c dd       	rcall	.-1416   	; 0x37e <_Z20print_number_decimalhjbh>
			            break;	
 906:	58 c0       	rjmp	.+176    	; 0x9b8 <main+0x3a0>
			case 20 ... 29:     paramtodisp_addr = CurrScreen;
 908:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 90c:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <Setup_param>
 910:	99 23       	and	r25, r25
 912:	21 f0       	breq	.+8      	; 0x91c <main+0x304>
 914:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 918:	41 27       	eor	r20, r17
 91a:	01 c0       	rjmp	.+2      	; 0x91e <main+0x306>
 91c:	41 2f       	mov	r20, r17
 91e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 922:	70 e0       	ldi	r23, 0x00	; 0
 924:	20 e0       	ldi	r18, 0x00	; 0
 926:	2b dd       	rcall	.-1450   	; 0x37e <_Z20print_number_decimalhjbh>
						break;
 928:	47 c0       	rjmp	.+142    	; 0x9b8 <main+0x3a0>
			case 30:    paramtodisp_addr = CurrScreen;
 92a:	60 92 77 00 	sts	0x0077, r6	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 92e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 932:	88 23       	and	r24, r24
 934:	21 f0       	breq	.+8      	; 0x93e <main+0x326>
 936:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 93a:	41 27       	eor	r20, r17
 93c:	01 c0       	rjmp	.+2      	; 0x940 <main+0x328>
 93e:	41 2f       	mov	r20, r17
 940:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 944:	70 e0       	ldi	r23, 0x00	; 0
 946:	20 e0       	ldi	r18, 0x00	; 0
 948:	86 2d       	mov	r24, r6
 94a:	19 dd       	rcall	.-1486   	; 0x37e <_Z20print_number_decimalhjbh>
						break;
 94c:	35 c0       	rjmp	.+106    	; 0x9b8 <main+0x3a0>
			case 31:    paramtodisp_addr = CurrScreen;
 94e:	50 92 77 00 	sts	0x0077, r5	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),2);
 952:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 956:	88 23       	and	r24, r24
 958:	21 f0       	breq	.+8      	; 0x962 <main+0x34a>
 95a:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 95e:	41 27       	eor	r20, r17
 960:	01 c0       	rjmp	.+2      	; 0x964 <main+0x34c>
 962:	41 2f       	mov	r20, r17
 964:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 968:	70 e0       	ldi	r23, 0x00	; 0
 96a:	22 e0       	ldi	r18, 0x02	; 2
 96c:	85 2d       	mov	r24, r5
 96e:	07 dd       	rcall	.-1522   	; 0x37e <_Z20print_number_decimalhjbh>
			            break;
 970:	23 c0       	rjmp	.+70     	; 0x9b8 <main+0x3a0>
			case 32:    paramtodisp_addr = CurrScreen;
 972:	40 92 77 00 	sts	0x0077, r4	; 0x800077 <paramtodisp_addr>
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 976:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 97a:	88 23       	and	r24, r24
 97c:	21 f0       	breq	.+8      	; 0x986 <main+0x36e>
 97e:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 982:	41 27       	eor	r20, r17
 984:	01 c0       	rjmp	.+2      	; 0x988 <main+0x370>
 986:	41 2f       	mov	r20, r17
 988:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 98c:	70 e0       	ldi	r23, 0x00	; 0
 98e:	20 e0       	ldi	r18, 0x00	; 0
 990:	84 2d       	mov	r24, r4
 992:	f5 dc       	rcall	.-1558   	; 0x37e <_Z20print_number_decimalhjbh>
						break;
 994:	11 c0       	rjmp	.+34     	; 0x9b8 <main+0x3a0>
			case 33:    paramtodisp_addr = CurrScreen;
 996:	00 93 77 00 	sts	0x0077, r16	; 0x800077 <paramtodisp_addr>
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),2);
 99a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 99e:	88 23       	and	r24, r24
 9a0:	21 f0       	breq	.+8      	; 0x9aa <main+0x392>
 9a2:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 9a6:	41 27       	eor	r20, r17
 9a8:	01 c0       	rjmp	.+2      	; 0x9ac <main+0x394>
 9aa:	41 2f       	mov	r20, r17
 9ac:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 9b0:	70 e0       	ldi	r23, 0x00	; 0
 9b2:	22 e0       	ldi	r18, 0x02	; 2
 9b4:	80 2f       	mov	r24, r16
 9b6:	e3 dc       	rcall	.-1594   	; 0x37e <_Z20print_number_decimalhjbh>
						break;
		}
		if (Setup_param) { 
 9b8:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 9bc:	88 23       	and	r24, r24
 9be:	49 f0       	breq	.+18     	; 0x9d2 <main+0x3ba>
			
			paramfromdisp = paramtodisp;
 9c0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <paramtodisp>
 9c4:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <paramfromdisp>
			paramfromdisp_addr = paramtodisp_addr;
 9c8:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <paramtodisp_addr>
 9cc:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <paramfromdisp_addr>
 9d0:	63 ce       	rjmp	.-826    	; 0x698 <main+0x80>
		} else
		{
			paramfromdisp = 0;
 9d2:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <paramfromdisp>
			paramfromdisp_addr = 0;
 9d6:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <paramfromdisp_addr>
 9da:	5e ce       	rjmp	.-836    	; 0x698 <main+0x80>
		         if (CurrScreen > 0) CurrScreen--;
		         else
		        CurrScreen = SCREENS;
	       }
		 }
		 if (!Key1.outstate) Key1_lock = 0;
 9dc:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <Key1_lock>
 9e0:	90 ce       	rjmp	.-736    	; 0x702 <main+0xea>
			       CurrScreen = 0;
			 } 
				  
		 }	 
		 
		 if (!Key2.outstate) Key2_lock = 0;
 9e2:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <Key2_lock>
 9e6:	aa ce       	rjmp	.-684    	; 0x73c <main+0x124>
		 {
		      Key2_lock_long = 1;
			  Setup_param = !Setup_param;
		 }
		 
		 if (!Key2.long_outstate) Key2_lock_long = 0;
 9e8:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <Key2_lock_long>
 9ec:	b9 ce       	rjmp	.-654    	; 0x760 <main+0x148>

000009ee <__umulhisi3>:
 9ee:	a2 9f       	mul	r26, r18
 9f0:	b0 01       	movw	r22, r0
 9f2:	b3 9f       	mul	r27, r19
 9f4:	c0 01       	movw	r24, r0
 9f6:	a3 9f       	mul	r26, r19
 9f8:	01 d0       	rcall	.+2      	; 0x9fc <__umulhisi3+0xe>
 9fa:	b2 9f       	mul	r27, r18
 9fc:	70 0d       	add	r23, r0
 9fe:	81 1d       	adc	r24, r1
 a00:	11 24       	eor	r1, r1
 a02:	91 1d       	adc	r25, r1
 a04:	08 95       	ret

00000a06 <_exit>:
 a06:	f8 94       	cli

00000a08 <__stop_program>:
 a08:	ff cf       	rjmp	.-2      	; 0xa08 <__stop_program>
