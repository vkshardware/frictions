
disp_i2c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000adc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000b50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002d  00800060  00800060  00000b50  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b50  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000128b  00000000  00000000  00000c44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006eb  00000000  00000000  00001ecf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f11  00000000  00000000  000025ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  000034cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f4  00000000  00000000  00003688  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dc2  00000000  00000000  00003c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004a3e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4f c0       	rjmp	.+158    	; 0xa0 <__ctors_end>
   2:	5e c0       	rjmp	.+188    	; 0xc0 <__bad_interrupt>
   4:	5d c0       	rjmp	.+186    	; 0xc0 <__bad_interrupt>
   6:	5c c0       	rjmp	.+184    	; 0xc0 <__bad_interrupt>
   8:	f7 c0       	rjmp	.+494    	; 0x1f8 <__vector_4>
   a:	5a c0       	rjmp	.+180    	; 0xc0 <__bad_interrupt>
   c:	59 c0       	rjmp	.+178    	; 0xc0 <__bad_interrupt>
   e:	58 c0       	rjmp	.+176    	; 0xc0 <__bad_interrupt>
  10:	57 c0       	rjmp	.+174    	; 0xc0 <__bad_interrupt>
  12:	56 c0       	rjmp	.+172    	; 0xc0 <__bad_interrupt>
  14:	55 c0       	rjmp	.+170    	; 0xc0 <__bad_interrupt>
  16:	54 c0       	rjmp	.+168    	; 0xc0 <__bad_interrupt>
  18:	53 c0       	rjmp	.+166    	; 0xc0 <__bad_interrupt>
  1a:	52 c0       	rjmp	.+164    	; 0xc0 <__bad_interrupt>
  1c:	51 c0       	rjmp	.+162    	; 0xc0 <__bad_interrupt>
  1e:	50 c0       	rjmp	.+160    	; 0xc0 <__bad_interrupt>
  20:	4f c0       	rjmp	.+158    	; 0xc0 <__bad_interrupt>
  22:	77 c0       	rjmp	.+238    	; 0x112 <__vector_17>
  24:	4d c0       	rjmp	.+154    	; 0xc0 <__bad_interrupt>
  26:	3a c1       	rjmp	.+628    	; 0x29c <_Z6setsegh+0x1a>
  28:	3d c1       	rjmp	.+634    	; 0x2a4 <_Z6setsegh+0x22>
  2a:	40 c1       	rjmp	.+640    	; 0x2ac <_Z6setsegh+0x2a>
  2c:	43 c1       	rjmp	.+646    	; 0x2b4 <_Z6setsegh+0x32>
  2e:	46 c1       	rjmp	.+652    	; 0x2bc <_Z6setsegh+0x3a>
  30:	49 c1       	rjmp	.+658    	; 0x2c4 <_Z6setsegh+0x42>
  32:	4c c1       	rjmp	.+664    	; 0x2cc <_Z6setsegh+0x4a>
  34:	4f c1       	rjmp	.+670    	; 0x2d4 <_Z6setsegh+0x52>
  36:	52 c1       	rjmp	.+676    	; 0x2dc <_Z6setsegh+0x5a>
  38:	55 c1       	rjmp	.+682    	; 0x2e4 <_Z6setsegh+0x62>
  3a:	58 c1       	rjmp	.+688    	; 0x2ec <_Z6setsegh+0x6a>
  3c:	59 c1       	rjmp	.+690    	; 0x2f0 <_Z6setsegh+0x6e>
  3e:	5c c1       	rjmp	.+696    	; 0x2f8 <_Z6setsegh+0x76>
  40:	5f c1       	rjmp	.+702    	; 0x300 <_Z6setsegh+0x7e>
  42:	62 c1       	rjmp	.+708    	; 0x308 <_Z6setsegh+0x86>
  44:	65 c1       	rjmp	.+714    	; 0x310 <_Z6setsegh+0x8e>
  46:	68 c1       	rjmp	.+720    	; 0x318 <_Z6setsegh+0x96>
  48:	69 c1       	rjmp	.+722    	; 0x31c <_Z6setsegh+0x9a>
  4a:	6a c1       	rjmp	.+724    	; 0x320 <_Z6setsegh+0x9e>
  4c:	6d c1       	rjmp	.+730    	; 0x328 <_Z6setsegh+0xa6>
  4e:	70 c1       	rjmp	.+736    	; 0x330 <_Z6setsegh+0xae>
  50:	e3 c3       	rjmp	.+1990   	; 0x818 <main+0x17e>
  52:	ea c3       	rjmp	.+2004   	; 0x828 <main+0x18e>
  54:	fb c3       	rjmp	.+2038   	; 0x84c <main+0x1b2>
  56:	0d c4       	rjmp	.+2074   	; 0x872 <main+0x1d8>
  58:	1f c4       	rjmp	.+2110   	; 0x898 <main+0x1fe>
  5a:	31 c4       	rjmp	.+2146   	; 0x8be <main+0x224>
  5c:	43 c4       	rjmp	.+2182   	; 0x8e4 <main+0x24a>
  5e:	54 c4       	rjmp	.+2216   	; 0x908 <main+0x26e>
  60:	65 c4       	rjmp	.+2250   	; 0x92c <main+0x292>
  62:	76 c4       	rjmp	.+2284   	; 0x950 <main+0x2b6>
  64:	87 c4       	rjmp	.+2318   	; 0x974 <main+0x2da>
  66:	86 c4       	rjmp	.+2316   	; 0x974 <main+0x2da>
  68:	85 c4       	rjmp	.+2314   	; 0x974 <main+0x2da>
  6a:	84 c4       	rjmp	.+2312   	; 0x974 <main+0x2da>
  6c:	83 c4       	rjmp	.+2310   	; 0x974 <main+0x2da>
  6e:	82 c4       	rjmp	.+2308   	; 0x974 <main+0x2da>
  70:	81 c4       	rjmp	.+2306   	; 0x974 <main+0x2da>
  72:	80 c4       	rjmp	.+2304   	; 0x974 <main+0x2da>
  74:	7f c4       	rjmp	.+2302   	; 0x974 <main+0x2da>
  76:	7e c4       	rjmp	.+2300   	; 0x974 <main+0x2da>
  78:	8e c4       	rjmp	.+2332   	; 0x996 <main+0x2fc>
  7a:	8d c4       	rjmp	.+2330   	; 0x996 <main+0x2fc>
  7c:	8c c4       	rjmp	.+2328   	; 0x996 <main+0x2fc>
  7e:	8b c4       	rjmp	.+2326   	; 0x996 <main+0x2fc>
  80:	8a c4       	rjmp	.+2324   	; 0x996 <main+0x2fc>
  82:	89 c4       	rjmp	.+2322   	; 0x996 <main+0x2fc>
  84:	88 c4       	rjmp	.+2320   	; 0x996 <main+0x2fc>
  86:	87 c4       	rjmp	.+2318   	; 0x996 <main+0x2fc>
  88:	86 c4       	rjmp	.+2316   	; 0x996 <main+0x2fc>
  8a:	85 c4       	rjmp	.+2314   	; 0x996 <main+0x2fc>
  8c:	95 c4       	rjmp	.+2346   	; 0x9b8 <main+0x31e>
  8e:	a6 c4       	rjmp	.+2380   	; 0x9dc <main+0x342>
  90:	b7 c4       	rjmp	.+2414   	; 0xa00 <main+0x366>
  92:	c8 c4       	rjmp	.+2448   	; 0xa24 <main+0x38a>
  94:	d9 c4       	rjmp	.+2482   	; 0xa48 <main+0x3ae>
  96:	d8 c4       	rjmp	.+2480   	; 0xa48 <main+0x3ae>
  98:	e8 c4       	rjmp	.+2512   	; 0xa6a <main+0x3d0>
  9a:	e7 c4       	rjmp	.+2510   	; 0xa6a <main+0x3d0>
  9c:	e6 c4       	rjmp	.+2508   	; 0xa6a <main+0x3d0>
  9e:	e5 c4       	rjmp	.+2506   	; 0xa6a <main+0x3d0>

000000a0 <__ctors_end>:
  a0:	11 24       	eor	r1, r1
  a2:	1f be       	out	0x3f, r1	; 63
  a4:	cf e5       	ldi	r28, 0x5F	; 95
  a6:	d4 e0       	ldi	r29, 0x04	; 4
  a8:	de bf       	out	0x3e, r29	; 62
  aa:	cd bf       	out	0x3d, r28	; 61

000000ac <__do_clear_bss>:
  ac:	20 e0       	ldi	r18, 0x00	; 0
  ae:	a0 e6       	ldi	r26, 0x60	; 96
  b0:	b0 e0       	ldi	r27, 0x00	; 0
  b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
  b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
  b6:	ad 38       	cpi	r26, 0x8D	; 141
  b8:	b2 07       	cpc	r27, r18
  ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
  bc:	ee d2       	rcall	.+1500   	; 0x69a <main>
  be:	0c c5       	rjmp	.+2584   	; 0xad8 <_exit>

000000c0 <__bad_interrupt>:
  c0:	9f cf       	rjmp	.-194    	; 0x0 <__vectors>

000000c2 <_Z14_switch_filterP12SwitchFilter>:
		
		setseg(10);
		_delay_ms(UPDATE_DISPLAY);
	}
	
}
  c2:	fc 01       	movw	r30, r24
  c4:	a5 81       	ldd	r26, Z+5	; 0x05
  c6:	b6 81       	ldd	r27, Z+6	; 0x06
  c8:	9c 91       	ld	r25, X
  ca:	87 81       	ldd	r24, Z+7	; 0x07
  cc:	89 23       	and	r24, r25
  ce:	a9 f4       	brne	.+42     	; 0xfa <_Z14_switch_filterP12SwitchFilter+0x38>
  d0:	80 85       	ldd	r24, Z+8	; 0x08
  d2:	93 81       	ldd	r25, Z+3	; 0x03
  d4:	89 17       	cp	r24, r25
  d6:	10 f0       	brcs	.+4      	; 0xdc <_Z14_switch_filterP12SwitchFilter+0x1a>
  d8:	91 e0       	ldi	r25, 0x01	; 1
  da:	92 83       	std	Z+2, r25	; 0x02
  dc:	94 81       	ldd	r25, Z+4	; 0x04
  de:	89 17       	cp	r24, r25
  e0:	20 f0       	brcs	.+8      	; 0xea <_Z14_switch_filterP12SwitchFilter+0x28>
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	81 83       	std	Z+1, r24	; 0x01
  e8:	02 c0       	rjmp	.+4      	; 0xee <_Z14_switch_filterP12SwitchFilter+0x2c>
  ea:	8f 5f       	subi	r24, 0xFF	; 255
  ec:	80 87       	std	Z+8, r24	; 0x08
  ee:	83 81       	ldd	r24, Z+3	; 0x03
  f0:	8f 3f       	cpi	r24, 0xFF	; 255
  f2:	41 f4       	brne	.+16     	; 0x104 <_Z14_switch_filterP12SwitchFilter+0x42>
  f4:	10 86       	std	Z+8, r1	; 0x08
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	08 95       	ret
  fa:	82 81       	ldd	r24, Z+2	; 0x02
  fc:	12 82       	std	Z+2, r1	; 0x02
  fe:	11 82       	std	Z+1, r1	; 0x01
 100:	10 86       	std	Z+8, r1	; 0x08
 102:	08 95       	ret
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	08 95       	ret

00000108 <_Z14i2c_init_slaveh>:
 108:	82 b9       	out	0x02, r24	; 2
 10a:	85 ec       	ldi	r24, 0xC5	; 197
 10c:	86 bf       	out	0x36, r24	; 54
 10e:	78 94       	sei
 110:	08 95       	ret

00000112 <__vector_17>:
 112:	1f 92       	push	r1
 114:	0f 92       	push	r0
 116:	0f b6       	in	r0, 0x3f	; 63
 118:	0f 92       	push	r0
 11a:	11 24       	eor	r1, r1
 11c:	8f 93       	push	r24
 11e:	9f 93       	push	r25
 120:	ef 93       	push	r30
 122:	ff 93       	push	r31
 124:	81 b1       	in	r24, 0x01	; 1
 126:	88 7f       	andi	r24, 0xF8	; 248
 128:	80 36       	cpi	r24, 0x60	; 96
 12a:	39 f4       	brne	.+14     	; 0x13a <__vector_17+0x28>
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <i2c_reg_addr_>
 132:	86 b7       	in	r24, 0x36	; 54
 134:	85 6c       	ori	r24, 0xC5	; 197
 136:	86 bf       	out	0x36, r24	; 54
 138:	56 c0       	rjmp	.+172    	; 0x1e6 <__vector_17+0xd4>
 13a:	81 b1       	in	r24, 0x01	; 1
 13c:	88 7f       	andi	r24, 0xF8	; 248
 13e:	80 38       	cpi	r24, 0x80	; 128
 140:	39 f5       	brne	.+78     	; 0x190 <__vector_17+0x7e>
 142:	93 b1       	in	r25, 0x03	; 3
 144:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <i2c_reg_addr_>
 148:	8f 3f       	cpi	r24, 0xFF	; 255
 14a:	59 f4       	brne	.+22     	; 0x162 <__vector_17+0x50>
 14c:	98 30       	cpi	r25, 0x08	; 8
 14e:	18 f4       	brcc	.+6      	; 0x156 <__vector_17+0x44>
 150:	90 93 84 00 	sts	0x0084, r25	; 0x800084 <i2c_reg_addr_>
 154:	02 c0       	rjmp	.+4      	; 0x15a <__vector_17+0x48>
 156:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <i2c_reg_addr_>
 15a:	86 b7       	in	r24, 0x36	; 54
 15c:	85 6c       	ori	r24, 0xC5	; 197
 15e:	86 bf       	out	0x36, r24	; 54
 160:	42 c0       	rjmp	.+132    	; 0x1e6 <__vector_17+0xd4>
 162:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <i2c_reg_addr_>
 166:	88 30       	cpi	r24, 0x08	; 8
 168:	78 f4       	brcc	.+30     	; 0x188 <__vector_17+0x76>
 16a:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <i2c_reg_addr_>
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	eb 57       	subi	r30, 0x7B	; 123
 172:	ff 4f       	sbci	r31, 0xFF	; 255
 174:	90 83       	st	Z, r25
 176:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <i2c_reg_addr_>
 17a:	8f 5f       	subi	r24, 0xFF	; 255
 17c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <i2c_reg_addr_>
 180:	86 b7       	in	r24, 0x36	; 54
 182:	85 6c       	ori	r24, 0xC5	; 197
 184:	86 bf       	out	0x36, r24	; 54
 186:	2f c0       	rjmp	.+94     	; 0x1e6 <__vector_17+0xd4>
 188:	86 b7       	in	r24, 0x36	; 54
 18a:	85 68       	ori	r24, 0x85	; 133
 18c:	86 bf       	out	0x36, r24	; 54
 18e:	2b c0       	rjmp	.+86     	; 0x1e6 <__vector_17+0xd4>
 190:	81 b1       	in	r24, 0x01	; 1
 192:	88 7f       	andi	r24, 0xF8	; 248
 194:	88 3b       	cpi	r24, 0xB8	; 184
 196:	21 f5       	brne	.+72     	; 0x1e0 <__vector_17+0xce>
 198:	93 b1       	in	r25, 0x03	; 3
 19a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <i2c_reg_addr_>
 19e:	8f 3f       	cpi	r24, 0xFF	; 255
 1a0:	39 f4       	brne	.+14     	; 0x1b0 <__vector_17+0x9e>
 1a2:	98 30       	cpi	r25, 0x08	; 8
 1a4:	18 f4       	brcc	.+6      	; 0x1ac <__vector_17+0x9a>
 1a6:	90 93 84 00 	sts	0x0084, r25	; 0x800084 <i2c_reg_addr_>
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <__vector_17+0x9e>
 1ac:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <i2c_reg_addr_>
 1b0:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <i2c_reg_addr_>
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	eb 57       	subi	r30, 0x7B	; 123
 1b8:	ff 4f       	sbci	r31, 0xFF	; 255
 1ba:	80 81       	ld	r24, Z
 1bc:	83 b9       	out	0x03, r24	; 3
 1be:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <i2c_reg_addr_>
 1c2:	8f 5f       	subi	r24, 0xFF	; 255
 1c4:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <i2c_reg_addr_>
 1c8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <i2c_reg_addr_>
 1cc:	88 30       	cpi	r24, 0x08	; 8
 1ce:	20 f4       	brcc	.+8      	; 0x1d8 <__vector_17+0xc6>
 1d0:	86 b7       	in	r24, 0x36	; 54
 1d2:	85 6c       	ori	r24, 0xC5	; 197
 1d4:	86 bf       	out	0x36, r24	; 54
 1d6:	07 c0       	rjmp	.+14     	; 0x1e6 <__vector_17+0xd4>
 1d8:	86 b7       	in	r24, 0x36	; 54
 1da:	85 68       	ori	r24, 0x85	; 133
 1dc:	86 bf       	out	0x36, r24	; 54
 1de:	03 c0       	rjmp	.+6      	; 0x1e6 <__vector_17+0xd4>
 1e0:	86 b7       	in	r24, 0x36	; 54
 1e2:	85 64       	ori	r24, 0x45	; 69
 1e4:	86 bf       	out	0x36, r24	; 54
 1e6:	ff 91       	pop	r31
 1e8:	ef 91       	pop	r30
 1ea:	9f 91       	pop	r25
 1ec:	8f 91       	pop	r24
 1ee:	0f 90       	pop	r0
 1f0:	0f be       	out	0x3f, r0	; 63
 1f2:	0f 90       	pop	r0
 1f4:	1f 90       	pop	r1
 1f6:	18 95       	reti

000001f8 <__vector_4>:
 1f8:	1f 92       	push	r1
 1fa:	0f 92       	push	r0
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	0f 92       	push	r0
 200:	11 24       	eor	r1, r1
 202:	2f 93       	push	r18
 204:	3f 93       	push	r19
 206:	4f 93       	push	r20
 208:	5f 93       	push	r21
 20a:	6f 93       	push	r22
 20c:	7f 93       	push	r23
 20e:	8f 93       	push	r24
 210:	9f 93       	push	r25
 212:	af 93       	push	r26
 214:	bf 93       	push	r27
 216:	ef 93       	push	r30
 218:	ff 93       	push	r31
 21a:	89 e6       	ldi	r24, 0x69	; 105
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	51 df       	rcall	.-350    	; 0xc2 <_Z14_switch_filterP12SwitchFilter>
 220:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <Key1>
 224:	80 e6       	ldi	r24, 0x60	; 96
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	4c df       	rcall	.-360    	; 0xc2 <_Z14_switch_filterP12SwitchFilter>
 22a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 22e:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <blink>
 232:	8c 30       	cpi	r24, 0x0C	; 12
 234:	30 f4       	brcc	.+12     	; 0x242 <__vector_4+0x4a>
 236:	8f 5f       	subi	r24, 0xFF	; 255
 238:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <blink>
 23c:	8c 30       	cpi	r24, 0x0C	; 12
 23e:	21 f0       	breq	.+8      	; 0x248 <__vector_4+0x50>
 240:	09 c0       	rjmp	.+18     	; 0x254 <__vector_4+0x5c>
 242:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <blink>
 246:	06 c0       	rjmp	.+12     	; 0x254 <__vector_4+0x5c>
 248:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <blink_bus>
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	89 27       	eor	r24, r25
 250:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <blink_bus>
 254:	14 bc       	out	0x24, r1	; 36
 256:	ff 91       	pop	r31
 258:	ef 91       	pop	r30
 25a:	bf 91       	pop	r27
 25c:	af 91       	pop	r26
 25e:	9f 91       	pop	r25
 260:	8f 91       	pop	r24
 262:	7f 91       	pop	r23
 264:	6f 91       	pop	r22
 266:	5f 91       	pop	r21
 268:	4f 91       	pop	r20
 26a:	3f 91       	pop	r19
 26c:	2f 91       	pop	r18
 26e:	0f 90       	pop	r0
 270:	0f be       	out	0x3f, r0	; 63
 272:	0f 90       	pop	r0
 274:	1f 90       	pop	r1
 276:	18 95       	reti

00000278 <_Z6addsegh>:
 278:	92 b3       	in	r25, 0x12	; 18
 27a:	80 95       	com	r24
 27c:	98 23       	and	r25, r24
 27e:	92 bb       	out	0x12, r25	; 18
 280:	08 95       	ret

00000282 <_Z6setsegh>:
 282:	e8 2f       	mov	r30, r24
 284:	8f ef       	ldi	r24, 0xFF	; 255
 286:	82 bb       	out	0x12, r24	; 18
 288:	8e 2f       	mov	r24, r30
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	85 31       	cpi	r24, 0x15	; 21
 28e:	91 05       	cpc	r25, r1
 290:	08 f0       	brcs	.+2      	; 0x294 <_Z6setsegh+0x12>
 292:	51 c0       	rjmp	.+162    	; 0x336 <_Z6setsegh+0xb4>
 294:	fc 01       	movw	r30, r24
 296:	ed 5e       	subi	r30, 0xED	; 237
 298:	ff 4f       	sbci	r31, 0xFF	; 255
 29a:	09 94       	ijmp
 29c:	82 b3       	in	r24, 0x12	; 18
 29e:	80 7a       	andi	r24, 0xA0	; 160
 2a0:	82 bb       	out	0x12, r24	; 18
 2a2:	08 95       	ret
 2a4:	82 b3       	in	r24, 0x12	; 18
 2a6:	8d 7b       	andi	r24, 0xBD	; 189
 2a8:	82 bb       	out	0x12, r24	; 18
 2aa:	08 95       	ret
 2ac:	82 b3       	in	r24, 0x12	; 18
 2ae:	84 76       	andi	r24, 0x64	; 100
 2b0:	82 bb       	out	0x12, r24	; 18
 2b2:	08 95       	ret
 2b4:	82 b3       	in	r24, 0x12	; 18
 2b6:	8c 72       	andi	r24, 0x2C	; 44
 2b8:	82 bb       	out	0x12, r24	; 18
 2ba:	08 95       	ret
 2bc:	82 b3       	in	r24, 0x12	; 18
 2be:	89 73       	andi	r24, 0x39	; 57
 2c0:	82 bb       	out	0x12, r24	; 18
 2c2:	08 95       	ret
 2c4:	82 b3       	in	r24, 0x12	; 18
 2c6:	8a 72       	andi	r24, 0x2A	; 42
 2c8:	82 bb       	out	0x12, r24	; 18
 2ca:	08 95       	ret
 2cc:	82 b3       	in	r24, 0x12	; 18
 2ce:	82 72       	andi	r24, 0x22	; 34
 2d0:	82 bb       	out	0x12, r24	; 18
 2d2:	08 95       	ret
 2d4:	82 b3       	in	r24, 0x12	; 18
 2d6:	8c 7b       	andi	r24, 0xBC	; 188
 2d8:	82 bb       	out	0x12, r24	; 18
 2da:	08 95       	ret
 2dc:	82 b3       	in	r24, 0x12	; 18
 2de:	80 72       	andi	r24, 0x20	; 32
 2e0:	82 bb       	out	0x12, r24	; 18
 2e2:	08 95       	ret
 2e4:	82 b3       	in	r24, 0x12	; 18
 2e6:	88 72       	andi	r24, 0x28	; 40
 2e8:	82 bb       	out	0x12, r24	; 18
 2ea:	08 95       	ret
 2ec:	97 98       	cbi	0x12, 7	; 18
 2ee:	08 95       	ret
 2f0:	82 b3       	in	r24, 0x12	; 18
 2f2:	81 7a       	andi	r24, 0xA1	; 161
 2f4:	82 bb       	out	0x12, r24	; 18
 2f6:	08 95       	ret
 2f8:	82 b3       	in	r24, 0x12	; 18
 2fa:	85 72       	andi	r24, 0x25	; 37
 2fc:	82 bb       	out	0x12, r24	; 18
 2fe:	08 95       	ret
 300:	82 b3       	in	r24, 0x12	; 18
 302:	83 7e       	andi	r24, 0xE3	; 227
 304:	82 bb       	out	0x12, r24	; 18
 306:	08 95       	ret
 308:	82 b3       	in	r24, 0x12	; 18
 30a:	85 72       	andi	r24, 0x25	; 37
 30c:	82 bb       	out	0x12, r24	; 18
 30e:	08 95       	ret
 310:	82 b3       	in	r24, 0x12	; 18
 312:	80 7b       	andi	r24, 0xB0	; 176
 314:	82 bb       	out	0x12, r24	; 18
 316:	08 95       	ret
 318:	94 98       	cbi	0x12, 4	; 18
 31a:	08 95       	ret
 31c:	90 98       	cbi	0x12, 0	; 18
 31e:	08 95       	ret
 320:	82 b3       	in	r24, 0x12	; 18
 322:	8e 7e       	andi	r24, 0xEE	; 238
 324:	82 bb       	out	0x12, r24	; 18
 326:	08 95       	ret
 328:	82 b3       	in	r24, 0x12	; 18
 32a:	82 7e       	andi	r24, 0xE2	; 226
 32c:	82 bb       	out	0x12, r24	; 18
 32e:	08 95       	ret
 330:	82 b3       	in	r24, 0x12	; 18
 332:	82 77       	andi	r24, 0x72	; 114
 334:	82 bb       	out	0x12, r24	; 18
 336:	08 95       	ret

00000338 <_Z9selectsegh>:
 338:	95 b3       	in	r25, 0x15	; 21
 33a:	9f 60       	ori	r25, 0x0F	; 15
 33c:	95 bb       	out	0x15, r25	; 21
 33e:	82 30       	cpi	r24, 0x02	; 2
 340:	59 f0       	breq	.+22     	; 0x358 <_Z9selectsegh+0x20>
 342:	18 f4       	brcc	.+6      	; 0x34a <_Z9selectsegh+0x12>
 344:	81 30       	cpi	r24, 0x01	; 1
 346:	31 f0       	breq	.+12     	; 0x354 <_Z9selectsegh+0x1c>
 348:	08 95       	ret
 34a:	83 30       	cpi	r24, 0x03	; 3
 34c:	39 f0       	breq	.+14     	; 0x35c <_Z9selectsegh+0x24>
 34e:	84 30       	cpi	r24, 0x04	; 4
 350:	39 f0       	breq	.+14     	; 0x360 <_Z9selectsegh+0x28>
 352:	08 95       	ret
 354:	ab 98       	cbi	0x15, 3	; 21
 356:	08 95       	ret
 358:	aa 98       	cbi	0x15, 2	; 21
 35a:	08 95       	ret
 35c:	a9 98       	cbi	0x15, 1	; 21
 35e:	08 95       	ret
 360:	a8 98       	cbi	0x15, 0	; 21
 362:	08 95       	ret

00000364 <_Z13init_switchesv>:
 364:	e9 e6       	ldi	r30, 0x69	; 105
 366:	f0 e0       	ldi	r31, 0x00	; 0
 368:	10 82       	st	Z, r1
 36a:	11 82       	std	Z+1, r1	; 0x01
 36c:	10 86       	std	Z+8, r1	; 0x08
 36e:	33 e0       	ldi	r19, 0x03	; 3
 370:	33 83       	std	Z+3, r19	; 0x03
 372:	29 e1       	ldi	r18, 0x19	; 25
 374:	24 83       	std	Z+4, r18	; 0x04
 376:	12 82       	std	Z+2, r1	; 0x02
 378:	86 e3       	ldi	r24, 0x36	; 54
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	96 83       	std	Z+6, r25	; 0x06
 37e:	85 83       	std	Z+5, r24	; 0x05
 380:	41 e0       	ldi	r20, 0x01	; 1
 382:	47 83       	std	Z+7, r20	; 0x07
 384:	e0 e6       	ldi	r30, 0x60	; 96
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	10 82       	st	Z, r1
 38a:	11 82       	std	Z+1, r1	; 0x01
 38c:	10 86       	std	Z+8, r1	; 0x08
 38e:	33 83       	std	Z+3, r19	; 0x03
 390:	24 83       	std	Z+4, r18	; 0x04
 392:	12 82       	std	Z+2, r1	; 0x02
 394:	96 83       	std	Z+6, r25	; 0x06
 396:	85 83       	std	Z+5, r24	; 0x05
 398:	82 e0       	ldi	r24, 0x02	; 2
 39a:	87 83       	std	Z+7, r24	; 0x07
 39c:	08 95       	ret

0000039e <_Z20print_number_decimalhjbh>:
 39e:	ef 92       	push	r14
 3a0:	ff 92       	push	r15
 3a2:	0f 93       	push	r16
 3a4:	1f 93       	push	r17
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	18 2f       	mov	r17, r24
 3ac:	eb 01       	movw	r28, r22
 3ae:	04 2f       	mov	r16, r20
 3b0:	e2 2e       	mov	r14, r18
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	c1 df       	rcall	.-126    	; 0x338 <_Z9selectsegh>
 3b6:	1a 30       	cpi	r17, 0x0A	; 10
 3b8:	20 f4       	brcc	.+8      	; 0x3c2 <_Z20print_number_decimalhjbh+0x24>
 3ba:	81 2f       	mov	r24, r17
 3bc:	62 df       	rcall	.-316    	; 0x282 <_Z6setsegh>
 3be:	95 98       	cbi	0x12, 5	; 18
 3c0:	1a c0       	rjmp	.+52     	; 0x3f6 <_Z20print_number_decimalhjbh+0x58>
 3c2:	8d ec       	ldi	r24, 0xCD	; 205
 3c4:	18 9f       	mul	r17, r24
 3c6:	f1 2c       	mov	r15, r1
 3c8:	11 24       	eor	r1, r1
 3ca:	f6 94       	lsr	r15
 3cc:	f6 94       	lsr	r15
 3ce:	f6 94       	lsr	r15
 3d0:	8f 2d       	mov	r24, r15
 3d2:	57 df       	rcall	.-338    	; 0x282 <_Z6setsegh>
 3d4:	8f e0       	ldi	r24, 0x0F	; 15
 3d6:	97 e2       	ldi	r25, 0x27	; 39
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <_Z20print_number_decimalhjbh+0x3a>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <_Z20print_number_decimalhjbh+0x40>
 3de:	00 00       	nop
 3e0:	82 e0       	ldi	r24, 0x02	; 2
 3e2:	aa df       	rcall	.-172    	; 0x338 <_Z9selectsegh>
 3e4:	ff 0c       	add	r15, r15
 3e6:	8f 2d       	mov	r24, r15
 3e8:	88 0f       	add	r24, r24
 3ea:	88 0f       	add	r24, r24
 3ec:	f8 0e       	add	r15, r24
 3ee:	81 2f       	mov	r24, r17
 3f0:	8f 19       	sub	r24, r15
 3f2:	47 df       	rcall	.-370    	; 0x282 <_Z6setsegh>
 3f4:	95 98       	cbi	0x12, 5	; 18
 3f6:	8f e0       	ldi	r24, 0x0F	; 15
 3f8:	97 e2       	ldi	r25, 0x27	; 39
 3fa:	01 97       	sbiw	r24, 0x01	; 1
 3fc:	f1 f7       	brne	.-4      	; 0x3fa <_Z20print_number_decimalhjbh+0x5c>
 3fe:	00 c0       	rjmp	.+0      	; 0x400 <__LOCK_REGION_LENGTH__>
 400:	00 00       	nop
 402:	e0 e8       	ldi	r30, 0x80	; 128
 404:	f0 e0       	ldi	r31, 0x00	; 0
 406:	9e 01       	movw	r18, r28
 408:	ad ec       	ldi	r26, 0xCD	; 205
 40a:	bc ec       	ldi	r27, 0xCC	; 204
 40c:	59 d3       	rcall	.+1714   	; 0xac0 <__umulhisi3>
 40e:	ac 01       	movw	r20, r24
 410:	56 95       	lsr	r21
 412:	47 95       	ror	r20
 414:	56 95       	lsr	r21
 416:	47 95       	ror	r20
 418:	56 95       	lsr	r21
 41a:	47 95       	ror	r20
 41c:	9a 01       	movw	r18, r20
 41e:	22 0f       	add	r18, r18
 420:	33 1f       	adc	r19, r19
 422:	ca 01       	movw	r24, r20
 424:	88 0f       	add	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	88 0f       	add	r24, r24
 42a:	99 1f       	adc	r25, r25
 42c:	88 0f       	add	r24, r24
 42e:	99 1f       	adc	r25, r25
 430:	82 0f       	add	r24, r18
 432:	93 1f       	adc	r25, r19
 434:	9e 01       	movw	r18, r28
 436:	28 1b       	sub	r18, r24
 438:	39 0b       	sbc	r19, r25
 43a:	22 83       	std	Z+2, r18	; 0x02
 43c:	9a 01       	movw	r18, r20
 43e:	40 d3       	rcall	.+1664   	; 0xac0 <__umulhisi3>
 440:	96 95       	lsr	r25
 442:	87 95       	ror	r24
 444:	96 95       	lsr	r25
 446:	87 95       	ror	r24
 448:	96 95       	lsr	r25
 44a:	87 95       	ror	r24
 44c:	9c 01       	movw	r18, r24
 44e:	22 0f       	add	r18, r18
 450:	33 1f       	adc	r19, r19
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	88 0f       	add	r24, r24
 458:	99 1f       	adc	r25, r25
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	82 0f       	add	r24, r18
 460:	93 1f       	adc	r25, r19
 462:	48 1b       	sub	r20, r24
 464:	59 0b       	sbc	r21, r25
 466:	41 83       	std	Z+1, r20	; 0x01
 468:	9e 01       	movw	r18, r28
 46a:	36 95       	lsr	r19
 46c:	27 95       	ror	r18
 46e:	36 95       	lsr	r19
 470:	27 95       	ror	r18
 472:	ab e7       	ldi	r26, 0x7B	; 123
 474:	b4 e1       	ldi	r27, 0x14	; 20
 476:	24 d3       	rcall	.+1608   	; 0xac0 <__umulhisi3>
 478:	ac 01       	movw	r20, r24
 47a:	56 95       	lsr	r21
 47c:	47 95       	ror	r20
 47e:	9a 01       	movw	r18, r20
 480:	ad ec       	ldi	r26, 0xCD	; 205
 482:	bc ec       	ldi	r27, 0xCC	; 204
 484:	1d d3       	rcall	.+1594   	; 0xac0 <__umulhisi3>
 486:	96 95       	lsr	r25
 488:	87 95       	ror	r24
 48a:	96 95       	lsr	r25
 48c:	87 95       	ror	r24
 48e:	96 95       	lsr	r25
 490:	87 95       	ror	r24
 492:	9c 01       	movw	r18, r24
 494:	22 0f       	add	r18, r18
 496:	33 1f       	adc	r19, r19
 498:	88 0f       	add	r24, r24
 49a:	99 1f       	adc	r25, r25
 49c:	88 0f       	add	r24, r24
 49e:	99 1f       	adc	r25, r25
 4a0:	88 0f       	add	r24, r24
 4a2:	99 1f       	adc	r25, r25
 4a4:	82 0f       	add	r24, r18
 4a6:	93 1f       	adc	r25, r19
 4a8:	48 1b       	sub	r20, r24
 4aa:	59 0b       	sbc	r21, r25
 4ac:	40 83       	st	Z, r20
 4ae:	41 11       	cpse	r20, r1
 4b0:	27 c0       	rjmp	.+78     	; 0x500 <__stack+0xa1>
 4b2:	c2 e0       	ldi	r28, 0x02	; 2
 4b4:	26 c0       	rjmp	.+76     	; 0x502 <__stack+0xa3>
 4b6:	cf 5f       	subi	r28, 0xFF	; 255
 4b8:	df 5f       	subi	r29, 0xFF	; 255
 4ba:	8c 2f       	mov	r24, r28
 4bc:	3d df       	rcall	.-390    	; 0x338 <_Z9selectsegh>
 4be:	ec 2f       	mov	r30, r28
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	e2 58       	subi	r30, 0x82	; 130
 4c4:	ff 4f       	sbci	r31, 0xFF	; 255
 4c6:	80 81       	ld	r24, Z
 4c8:	dc de       	rcall	.-584    	; 0x282 <_Z6setsegh>
 4ca:	c3 30       	cpi	r28, 0x03	; 3
 4cc:	59 f4       	brne	.+22     	; 0x4e4 <__stack+0x85>
 4ce:	31 e0       	ldi	r19, 0x01	; 1
 4d0:	e3 12       	cpse	r14, r19
 4d2:	08 c0       	rjmp	.+16     	; 0x4e4 <__stack+0x85>
 4d4:	95 98       	cbi	0x12, 5	; 18
 4d6:	8f e0       	ldi	r24, 0x0F	; 15
 4d8:	97 e2       	ldi	r25, 0x27	; 39
 4da:	01 97       	sbiw	r24, 0x01	; 1
 4dc:	f1 f7       	brne	.-4      	; 0x4da <__stack+0x7b>
 4de:	00 c0       	rjmp	.+0      	; 0x4e0 <__stack+0x81>
 4e0:	00 00       	nop
 4e2:	e9 cf       	rjmp	.-46     	; 0x4b6 <__stack+0x57>
 4e4:	95 9a       	sbi	0x12, 5	; 18
 4e6:	8f e0       	ldi	r24, 0x0F	; 15
 4e8:	97 e2       	ldi	r25, 0x27	; 39
 4ea:	01 97       	sbiw	r24, 0x01	; 1
 4ec:	f1 f7       	brne	.-4      	; 0x4ea <__stack+0x8b>
 4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <__stack+0x91>
 4f0:	00 00       	nop
 4f2:	d5 30       	cpi	r29, 0x05	; 5
 4f4:	00 f3       	brcs	.-64     	; 0x4b6 <__stack+0x57>
 4f6:	07 c0       	rjmp	.+14     	; 0x506 <__stack+0xa7>
 4f8:	d2 e0       	ldi	r29, 0x02	; 2
 4fa:	dc 0f       	add	r29, r28
 4fc:	cf 5f       	subi	r28, 0xFF	; 255
 4fe:	dd cf       	rjmp	.-70     	; 0x4ba <__stack+0x5b>
 500:	c1 e0       	ldi	r28, 0x01	; 1
 502:	01 11       	cpse	r16, r1
 504:	f9 cf       	rjmp	.-14     	; 0x4f8 <__stack+0x99>
 506:	df 91       	pop	r29
 508:	cf 91       	pop	r28
 50a:	1f 91       	pop	r17
 50c:	0f 91       	pop	r16
 50e:	ff 90       	pop	r15
 510:	ef 90       	pop	r14
 512:	08 95       	ret

00000514 <_Z16print_statusbytehhh>:
 514:	1f 93       	push	r17
 516:	cf 93       	push	r28
 518:	df 93       	push	r29
 51a:	18 2f       	mov	r17, r24
 51c:	d6 2f       	mov	r29, r22
 51e:	c4 2f       	mov	r28, r20
 520:	66 fd       	sbrc	r22, 6
 522:	97 c0       	rjmp	.+302    	; 0x652 <_Z16print_statusbytehhh+0x13e>
 524:	40 fd       	sbrc	r20, 0
 526:	a5 c0       	rjmp	.+330    	; 0x672 <_Z16print_statusbytehhh+0x15e>
 528:	08 c0       	rjmp	.+16     	; 0x53a <_Z16print_statusbytehhh+0x26>
 52a:	95 9a       	sbi	0x12, 5	; 18
 52c:	8f e0       	ldi	r24, 0x0F	; 15
 52e:	97 e2       	ldi	r25, 0x27	; 39
 530:	01 97       	sbiw	r24, 0x01	; 1
 532:	f1 f7       	brne	.-4      	; 0x530 <_Z16print_statusbytehhh+0x1c>
 534:	00 c0       	rjmp	.+0      	; 0x536 <_Z16print_statusbytehhh+0x22>
 536:	00 00       	nop
 538:	36 c0       	rjmp	.+108    	; 0x5a6 <_Z16print_statusbytehhh+0x92>
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	fd de       	rcall	.-518    	; 0x338 <_Z9selectsegh>
 53e:	8f ef       	ldi	r24, 0xFF	; 255
 540:	a0 de       	rcall	.-704    	; 0x282 <_Z6setsegh>
 542:	c3 ff       	sbrs	r28, 3
 544:	03 c0       	rjmp	.+6      	; 0x54c <_Z16print_statusbytehhh+0x38>
 546:	85 e0       	ldi	r24, 0x05	; 5
 548:	9c de       	rcall	.-712    	; 0x282 <_Z6setsegh>
 54a:	08 c0       	rjmp	.+16     	; 0x55c <_Z16print_statusbytehhh+0x48>
 54c:	d2 ff       	sbrs	r29, 2
 54e:	02 c0       	rjmp	.+4      	; 0x554 <_Z16print_statusbytehhh+0x40>
 550:	8b e0       	ldi	r24, 0x0B	; 11
 552:	97 de       	rcall	.-722    	; 0x282 <_Z6setsegh>
 554:	d3 ff       	sbrs	r29, 3
 556:	02 c0       	rjmp	.+4      	; 0x55c <_Z16print_statusbytehhh+0x48>
 558:	8c e0       	ldi	r24, 0x0C	; 12
 55a:	93 de       	rcall	.-730    	; 0x282 <_Z6setsegh>
 55c:	95 9a       	sbi	0x12, 5	; 18
 55e:	8f e0       	ldi	r24, 0x0F	; 15
 560:	97 e2       	ldi	r25, 0x27	; 39
 562:	01 97       	sbiw	r24, 0x01	; 1
 564:	f1 f7       	brne	.-4      	; 0x562 <_Z16print_statusbytehhh+0x4e>
 566:	00 c0       	rjmp	.+0      	; 0x568 <_Z16print_statusbytehhh+0x54>
 568:	00 00       	nop
 56a:	82 e0       	ldi	r24, 0x02	; 2
 56c:	e5 de       	rcall	.-566    	; 0x338 <_Z9selectsegh>
 56e:	8f ef       	ldi	r24, 0xFF	; 255
 570:	88 de       	rcall	.-752    	; 0x282 <_Z6setsegh>
 572:	12 ff       	sbrs	r17, 2
 574:	02 c0       	rjmp	.+4      	; 0x57a <_Z16print_statusbytehhh+0x66>
 576:	80 e1       	ldi	r24, 0x10	; 16
 578:	84 de       	rcall	.-760    	; 0x282 <_Z6setsegh>
 57a:	13 ff       	sbrs	r17, 3
 57c:	02 c0       	rjmp	.+4      	; 0x582 <_Z16print_statusbytehhh+0x6e>
 57e:	81 e1       	ldi	r24, 0x11	; 17
 580:	80 de       	rcall	.-768    	; 0x282 <_Z6setsegh>
 582:	81 2f       	mov	r24, r17
 584:	8c 70       	andi	r24, 0x0C	; 12
 586:	8c 30       	cpi	r24, 0x0C	; 12
 588:	11 f4       	brne	.+4      	; 0x58e <_Z16print_statusbytehhh+0x7a>
 58a:	82 e1       	ldi	r24, 0x12	; 18
 58c:	7a de       	rcall	.-780    	; 0x282 <_Z6setsegh>
 58e:	c2 ff       	sbrs	r28, 2
 590:	02 c0       	rjmp	.+4      	; 0x596 <_Z16print_statusbytehhh+0x82>
 592:	80 e8       	ldi	r24, 0x80	; 128
 594:	71 de       	rcall	.-798    	; 0x278 <_Z6addsegh>
 596:	d0 fd       	sbrc	r29, 0
 598:	95 98       	cbi	0x12, 5	; 18
 59a:	8f e0       	ldi	r24, 0x0F	; 15
 59c:	97 e2       	ldi	r25, 0x27	; 39
 59e:	01 97       	sbiw	r24, 0x01	; 1
 5a0:	f1 f7       	brne	.-4      	; 0x59e <_Z16print_statusbytehhh+0x8a>
 5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <_Z16print_statusbytehhh+0x90>
 5a4:	00 00       	nop
 5a6:	dd 23       	and	r29, r29
 5a8:	14 f0       	brlt	.+4      	; 0x5ae <_Z16print_statusbytehhh+0x9a>
 5aa:	c1 ff       	sbrs	r28, 1
 5ac:	1c c0       	rjmp	.+56     	; 0x5e6 <_Z16print_statusbytehhh+0xd2>
 5ae:	83 e0       	ldi	r24, 0x03	; 3
 5b0:	c3 de       	rcall	.-634    	; 0x338 <_Z9selectsegh>
 5b2:	84 e1       	ldi	r24, 0x14	; 20
 5b4:	66 de       	rcall	.-820    	; 0x282 <_Z6setsegh>
 5b6:	95 9a       	sbi	0x12, 5	; 18
 5b8:	8f e0       	ldi	r24, 0x0F	; 15
 5ba:	97 e2       	ldi	r25, 0x27	; 39
 5bc:	01 97       	sbiw	r24, 0x01	; 1
 5be:	f1 f7       	brne	.-4      	; 0x5bc <_Z16print_statusbytehhh+0xa8>
 5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <_Z16print_statusbytehhh+0xae>
 5c2:	00 00       	nop
 5c4:	84 e0       	ldi	r24, 0x04	; 4
 5c6:	b8 de       	rcall	.-656    	; 0x338 <_Z9selectsegh>
 5c8:	cc 23       	and	r28, r28
 5ca:	1c f4       	brge	.+6      	; 0x5d2 <_Z16print_statusbytehhh+0xbe>
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	59 de       	rcall	.-846    	; 0x282 <_Z6setsegh>
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <_Z16print_statusbytehhh+0xc2>
 5d2:	82 e0       	ldi	r24, 0x02	; 2
 5d4:	56 de       	rcall	.-852    	; 0x282 <_Z6setsegh>
 5d6:	95 9a       	sbi	0x12, 5	; 18
 5d8:	8f e0       	ldi	r24, 0x0F	; 15
 5da:	97 e2       	ldi	r25, 0x27	; 39
 5dc:	01 97       	sbiw	r24, 0x01	; 1
 5de:	f1 f7       	brne	.-4      	; 0x5dc <_Z16print_statusbytehhh+0xc8>
 5e0:	00 c0       	rjmp	.+0      	; 0x5e2 <_Z16print_statusbytehhh+0xce>
 5e2:	00 00       	nop
 5e4:	56 c0       	rjmp	.+172    	; 0x692 <_Z16print_statusbytehhh+0x17e>
 5e6:	83 e0       	ldi	r24, 0x03	; 3
 5e8:	a7 de       	rcall	.-690    	; 0x338 <_Z9selectsegh>
 5ea:	8f ef       	ldi	r24, 0xFF	; 255
 5ec:	4a de       	rcall	.-876    	; 0x282 <_Z6setsegh>
 5ee:	c3 ff       	sbrs	r28, 3
 5f0:	03 c0       	rjmp	.+6      	; 0x5f8 <_Z16print_statusbytehhh+0xe4>
 5f2:	85 e0       	ldi	r24, 0x05	; 5
 5f4:	46 de       	rcall	.-884    	; 0x282 <_Z6setsegh>
 5f6:	08 c0       	rjmp	.+16     	; 0x608 <_Z16print_statusbytehhh+0xf4>
 5f8:	d4 ff       	sbrs	r29, 4
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <_Z16print_statusbytehhh+0xec>
 5fc:	8b e0       	ldi	r24, 0x0B	; 11
 5fe:	41 de       	rcall	.-894    	; 0x282 <_Z6setsegh>
 600:	d5 ff       	sbrs	r29, 5
 602:	02 c0       	rjmp	.+4      	; 0x608 <_Z16print_statusbytehhh+0xf4>
 604:	8c e0       	ldi	r24, 0x0C	; 12
 606:	3d de       	rcall	.-902    	; 0x282 <_Z6setsegh>
 608:	95 9a       	sbi	0x12, 5	; 18
 60a:	8f e0       	ldi	r24, 0x0F	; 15
 60c:	97 e2       	ldi	r25, 0x27	; 39
 60e:	01 97       	sbiw	r24, 0x01	; 1
 610:	f1 f7       	brne	.-4      	; 0x60e <_Z16print_statusbytehhh+0xfa>
 612:	00 c0       	rjmp	.+0      	; 0x614 <_Z16print_statusbytehhh+0x100>
 614:	00 00       	nop
 616:	84 e0       	ldi	r24, 0x04	; 4
 618:	8f de       	rcall	.-738    	; 0x338 <_Z9selectsegh>
 61a:	8f ef       	ldi	r24, 0xFF	; 255
 61c:	32 de       	rcall	.-924    	; 0x282 <_Z6setsegh>
 61e:	14 ff       	sbrs	r17, 4
 620:	02 c0       	rjmp	.+4      	; 0x626 <_Z16print_statusbytehhh+0x112>
 622:	80 e1       	ldi	r24, 0x10	; 16
 624:	2e de       	rcall	.-932    	; 0x282 <_Z6setsegh>
 626:	15 ff       	sbrs	r17, 5
 628:	02 c0       	rjmp	.+4      	; 0x62e <_Z16print_statusbytehhh+0x11a>
 62a:	81 e1       	ldi	r24, 0x11	; 17
 62c:	2a de       	rcall	.-940    	; 0x282 <_Z6setsegh>
 62e:	10 73       	andi	r17, 0x30	; 48
 630:	10 33       	cpi	r17, 0x30	; 48
 632:	11 f4       	brne	.+4      	; 0x638 <_Z16print_statusbytehhh+0x124>
 634:	82 e1       	ldi	r24, 0x12	; 18
 636:	25 de       	rcall	.-950    	; 0x282 <_Z6setsegh>
 638:	c2 ff       	sbrs	r28, 2
 63a:	02 c0       	rjmp	.+4      	; 0x640 <_Z16print_statusbytehhh+0x12c>
 63c:	80 e8       	ldi	r24, 0x80	; 128
 63e:	1c de       	rcall	.-968    	; 0x278 <_Z6addsegh>
 640:	d1 fd       	sbrc	r29, 1
 642:	95 98       	cbi	0x12, 5	; 18
 644:	8f e0       	ldi	r24, 0x0F	; 15
 646:	97 e2       	ldi	r25, 0x27	; 39
 648:	01 97       	sbiw	r24, 0x01	; 1
 64a:	f1 f7       	brne	.-4      	; 0x648 <_Z16print_statusbytehhh+0x134>
 64c:	00 c0       	rjmp	.+0      	; 0x64e <_Z16print_statusbytehhh+0x13a>
 64e:	00 00       	nop
 650:	20 c0       	rjmp	.+64     	; 0x692 <_Z16print_statusbytehhh+0x17e>
 652:	81 e0       	ldi	r24, 0x01	; 1
 654:	71 de       	rcall	.-798    	; 0x338 <_Z9selectsegh>
 656:	84 e1       	ldi	r24, 0x14	; 20
 658:	14 de       	rcall	.-984    	; 0x282 <_Z6setsegh>
 65a:	95 9a       	sbi	0x12, 5	; 18
 65c:	8f e0       	ldi	r24, 0x0F	; 15
 65e:	97 e2       	ldi	r25, 0x27	; 39
 660:	01 97       	sbiw	r24, 0x01	; 1
 662:	f1 f7       	brne	.-4      	; 0x660 <_Z16print_statusbytehhh+0x14c>
 664:	00 c0       	rjmp	.+0      	; 0x666 <_Z16print_statusbytehhh+0x152>
 666:	00 00       	nop
 668:	82 e0       	ldi	r24, 0x02	; 2
 66a:	66 de       	rcall	.-820    	; 0x338 <_Z9selectsegh>
 66c:	81 e0       	ldi	r24, 0x01	; 1
 66e:	09 de       	rcall	.-1006   	; 0x282 <_Z6setsegh>
 670:	5c cf       	rjmp	.-328    	; 0x52a <_Z16print_statusbytehhh+0x16>
 672:	81 e0       	ldi	r24, 0x01	; 1
 674:	61 de       	rcall	.-830    	; 0x338 <_Z9selectsegh>
 676:	84 e1       	ldi	r24, 0x14	; 20
 678:	04 de       	rcall	.-1016   	; 0x282 <_Z6setsegh>
 67a:	95 9a       	sbi	0x12, 5	; 18
 67c:	8f e0       	ldi	r24, 0x0F	; 15
 67e:	97 e2       	ldi	r25, 0x27	; 39
 680:	01 97       	sbiw	r24, 0x01	; 1
 682:	f1 f7       	brne	.-4      	; 0x680 <_Z16print_statusbytehhh+0x16c>
 684:	00 c0       	rjmp	.+0      	; 0x686 <_Z16print_statusbytehhh+0x172>
 686:	00 00       	nop
 688:	82 e0       	ldi	r24, 0x02	; 2
 68a:	56 de       	rcall	.-852    	; 0x338 <_Z9selectsegh>
 68c:	82 e0       	ldi	r24, 0x02	; 2
 68e:	f9 dd       	rcall	.-1038   	; 0x282 <_Z6setsegh>
 690:	4c cf       	rjmp	.-360    	; 0x52a <_Z16print_statusbytehhh+0x16>
 692:	df 91       	pop	r29
 694:	cf 91       	pop	r28
 696:	1f 91       	pop	r17
 698:	08 95       	ret

0000069a <main>:

int main(void)
{

	
	DDRC = DIG1 | DIG2 | DIG3 | DIG4;
 69a:	8f e0       	ldi	r24, 0x0F	; 15
 69c:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFF; // All segments in a D port connected to cathodes
 69e:	8f ef       	ldi	r24, 0xFF	; 255
 6a0:	81 bb       	out	0x11, r24	; 17
	
	DDRB = LED3 | LED2;
 6a2:	84 e1       	ldi	r24, 0x14	; 20
 6a4:	87 bb       	out	0x17, r24	; 23
	
	// set up timer0
    TCCR2 = (1 << CS22)|(1 << CS21)|(1 << CS20); //1024 divider
 6a6:	87 e0       	ldi	r24, 0x07	; 7
 6a8:	85 bd       	out	0x25, r24	; 37
		
	TCNT2 = 0;
 6aa:	14 bc       	out	0x24, r1	; 36
		
	TIFR = (1<<TOV2);
 6ac:	80 e4       	ldi	r24, 0x40	; 64
 6ae:	88 bf       	out	0x38, r24	; 56
	TIMSK = (1<<TOIE2);
 6b0:	89 bf       	out	0x39, r24	; 57
	
	CurrScreen = 0;	
 6b2:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <CurrScreen>
    
	i2c_init_slave(I2C_SLAVE_ADDR);
 6b6:	8e ec       	ldi	r24, 0xCE	; 206
 6b8:	27 dd       	rcall	.-1458   	; 0x108 <_Z14i2c_init_slaveh>
	
	init_switches();
 6ba:	54 de       	rcall	.-856    	; 0x364 <_Z13init_switchesv>
	    
    sei();
 6bc:	78 94       	sei
	
	while (1) 
    {
		//asm("wdr"); 
		
		 statusbyte0 = i2cdata_[1];
 6be:	c5 e8       	ldi	r28, 0x85	; 133
 6c0:	d0 e0       	ldi	r29, 0x00	; 0
		 i2cdata_[5] = paramtodisp_addr;
		 i2cdata_[6] = paramfromdisp;
		 i2cdata_[7] = paramfromdisp_addr;
		
		
		if (Key1.outstate && (!Key1_lock)) {
 6c2:	0f 2e       	mov	r0, r31
 6c4:	f9 e6       	ldi	r31, 0x69	; 105
 6c6:	cf 2e       	mov	r12, r31
 6c8:	f0 e0       	ldi	r31, 0x00	; 0
 6ca:	df 2e       	mov	r13, r31
 6cc:	f0 2d       	mov	r31, r0
			Key1_lock = 1;
 6ce:	ff 24       	eor	r15, r15
 6d0:	f3 94       	inc	r15
			     if (paramtodisp > 0) paramtodisp--;
	        }   else
	        {
		         if (CurrScreen > 0) CurrScreen--;
		         else
		        CurrScreen = SCREENS;
 6d2:	0f 2e       	mov	r0, r31
 6d4:	f7 e2       	ldi	r31, 0x27	; 39
 6d6:	4f 2e       	mov	r4, r31
 6d8:	f0 2d       	mov	r31, r0
	       }
		 }
		 if (!Key1.outstate) Key1_lock = 0;
		 
		 if (Key2.outstate && (!Key2_lock)) {
 6da:	00 e6       	ldi	r16, 0x60	; 96
 6dc:	10 e0       	ldi	r17, 0x00	; 0
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),2);
			            break;
			case 32:    paramtodisp_addr = CurrScreen;
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 33:    paramtodisp_addr = CurrScreen;
 6de:	0f 2e       	mov	r0, r31
 6e0:	f1 e2       	ldi	r31, 0x21	; 33
 6e2:	5f 2e       	mov	r5, r31
 6e4:	f0 2d       	mov	r31, r0
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 31:    paramtodisp_addr = CurrScreen;
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),2);
			            break;
			case 32:    paramtodisp_addr = CurrScreen;
 6e6:	68 94       	set
 6e8:	66 24       	eor	r6, r6
 6ea:	65 f8       	bld	r6, 5
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 30:    paramtodisp_addr = CurrScreen;
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 31:    paramtodisp_addr = CurrScreen;
 6ec:	0f 2e       	mov	r0, r31
 6ee:	ff e1       	ldi	r31, 0x1F	; 31
 6f0:	7f 2e       	mov	r7, r31
 6f2:	f0 2d       	mov	r31, r0
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
			            break;	
			case 20 ... 29:     paramtodisp_addr = CurrScreen;
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
						break;
			case 30:    paramtodisp_addr = CurrScreen;
 6f4:	0f 2e       	mov	r0, r31
 6f6:	fe e1       	ldi	r31, 0x1E	; 30
 6f8:	8f 2e       	mov	r8, r31
 6fa:	f0 2d       	mov	r31, r0
			            print_number_decimal(7, paramtodisp,!(Setup_param && blink_bus),0);
			            break;	
			case 8:     paramtodisp_addr = ADDR_CMD_R;
			            print_number_decimal(8, paramtodisp,!(Setup_param && blink_bus),1);
			            break;	
			case 9:     paramtodisp_addr = ADDR_ENABLE_R;
 6fc:	0f 2e       	mov	r0, r31
 6fe:	f9 e0       	ldi	r31, 0x09	; 9
 700:	9f 2e       	mov	r9, r31
 702:	f0 2d       	mov	r31, r0
			            print_number_decimal(6, paramtodisp,!(Setup_param && blink_bus),0);
			            break;				
			case 7:     paramtodisp_addr = ADDR_PERSENTAGE_R;
			            print_number_decimal(7, paramtodisp,!(Setup_param && blink_bus),0);
			            break;	
			case 8:     paramtodisp_addr = ADDR_CMD_R;
 704:	68 94       	set
 706:	aa 24       	eor	r10, r10
 708:	a3 f8       	bld	r10, 3
			            print_number_decimal(5, paramtodisp,!(Setup_param && blink_bus),1);
			            break;	
			case 6:     paramtodisp_addr = ADDR_ENABLE_L;
			            print_number_decimal(6, paramtodisp,!(Setup_param && blink_bus),0);
			            break;				
			case 7:     paramtodisp_addr = ADDR_PERSENTAGE_R;
 70a:	0f 2e       	mov	r0, r31
 70c:	f7 e0       	ldi	r31, 0x07	; 7
 70e:	bf 2e       	mov	r11, r31
 710:	f0 2d       	mov	r31, r0
			            print_number_decimal(4, paramtodisp,!(Setup_param && blink_bus),0);
			            break;				
			case 5:     paramtodisp_addr = ADDR_CMD_L;
			            print_number_decimal(5, paramtodisp,!(Setup_param && blink_bus),1);
			            break;	
			case 6:     paramtodisp_addr = ADDR_ENABLE_L;
 712:	0f 2e       	mov	r0, r31
 714:	f6 e0       	ldi	r31, 0x06	; 6
 716:	ef 2e       	mov	r14, r31
 718:	f0 2d       	mov	r31, r0
	
	while (1) 
    {
		//asm("wdr"); 
		
		 statusbyte0 = i2cdata_[1];
 71a:	89 81       	ldd	r24, Y+1	; 0x01
 71c:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <statusbyte0>
		 statusbyte1 = i2cdata_[2];
 720:	9a 81       	ldd	r25, Y+2	; 0x02
 722:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <statusbyte1>
		 statusbyte2 = i2cdata_[3];
 726:	9b 81       	ldd	r25, Y+3	; 0x03
 728:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <statusbyte2>
		 
		 if (!Setup_param) paramtodisp = i2cdata_[4];
 72c:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <Setup_param>
 730:	91 11       	cpse	r25, r1
 732:	03 c0       	rjmp	.+6      	; 0x73a <main+0xa0>
 734:	2c 81       	ldd	r18, Y+4	; 0x04
 736:	20 93 78 00 	sts	0x0078, r18	; 0x800078 <paramtodisp>
		 i2cdata_[5] = paramtodisp_addr;
 73a:	20 91 77 00 	lds	r18, 0x0077	; 0x800077 <paramtodisp_addr>
 73e:	2d 83       	std	Y+5, r18	; 0x05
		 i2cdata_[6] = paramfromdisp;
 740:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <paramfromdisp>
 744:	2e 83       	std	Y+6, r18	; 0x06
		 i2cdata_[7] = paramfromdisp_addr;
 746:	20 91 75 00 	lds	r18, 0x0075	; 0x800075 <paramfromdisp_addr>
 74a:	2f 83       	std	Y+7, r18	; 0x07
		
		
		if (Key1.outstate && (!Key1_lock)) {
 74c:	f6 01       	movw	r30, r12
 74e:	20 81       	ld	r18, Z
 750:	22 23       	and	r18, r18
 752:	09 f4       	brne	.+2      	; 0x756 <main+0xbc>
 754:	ac c1       	rjmp	.+856    	; 0xaae <main+0x414>
 756:	20 91 7f 00 	lds	r18, 0x007F	; 0x80007f <Key1_lock>
 75a:	21 11       	cpse	r18, r1
 75c:	16 c0       	rjmp	.+44     	; 0x78a <main+0xf0>
			Key1_lock = 1;
 75e:	f0 92 7f 00 	sts	0x007F, r15	; 0x80007f <Key1_lock>
			
		    if (Setup_param)
 762:	99 23       	and	r25, r25
 764:	41 f0       	breq	.+16     	; 0x776 <main+0xdc>
	        {
			     if (paramtodisp > 0) paramtodisp--;
 766:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <paramtodisp>
 76a:	22 23       	and	r18, r18
 76c:	71 f0       	breq	.+28     	; 0x78a <main+0xf0>
 76e:	21 50       	subi	r18, 0x01	; 1
 770:	20 93 78 00 	sts	0x0078, r18	; 0x800078 <paramtodisp>
 774:	0a c0       	rjmp	.+20     	; 0x78a <main+0xf0>
	        }   else
	        {
		         if (CurrScreen > 0) CurrScreen--;
 776:	20 91 7c 00 	lds	r18, 0x007C	; 0x80007c <CurrScreen>
 77a:	22 23       	and	r18, r18
 77c:	21 f0       	breq	.+8      	; 0x786 <main+0xec>
 77e:	21 50       	subi	r18, 0x01	; 1
 780:	20 93 7c 00 	sts	0x007C, r18	; 0x80007c <CurrScreen>
 784:	02 c0       	rjmp	.+4      	; 0x78a <main+0xf0>
		         else
		        CurrScreen = SCREENS;
 786:	40 92 7c 00 	sts	0x007C, r4	; 0x80007c <CurrScreen>
	       }
		 }
		 if (!Key1.outstate) Key1_lock = 0;
		 
		 if (Key2.outstate && (!Key2_lock)) {
 78a:	f8 01       	movw	r30, r16
 78c:	20 81       	ld	r18, Z
 78e:	22 23       	and	r18, r18
 790:	09 f4       	brne	.+2      	; 0x794 <main+0xfa>
 792:	90 c1       	rjmp	.+800    	; 0xab4 <main+0x41a>
 794:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <Key2_lock>
 798:	21 11       	cpse	r18, r1
 79a:	14 c0       	rjmp	.+40     	; 0x7c4 <main+0x12a>
			 
			 Key2_lock = 1;
 79c:	f0 92 7e 00 	sts	0x007E, r15	; 0x80007e <Key2_lock>
			 
			 if (Setup_param)
 7a0:	99 23       	and	r25, r25
 7a2:	31 f0       	breq	.+12     	; 0x7b0 <main+0x116>
			 {
				 paramtodisp++;
 7a4:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <paramtodisp>
 7a8:	2f 5f       	subi	r18, 0xFF	; 255
 7aa:	20 93 78 00 	sts	0x0078, r18	; 0x800078 <paramtodisp>
 7ae:	0a c0       	rjmp	.+20     	; 0x7c4 <main+0x12a>
			 } else
			 {
			    if (CurrScreen < SCREENS) CurrScreen++;
 7b0:	20 91 7c 00 	lds	r18, 0x007C	; 0x80007c <CurrScreen>
 7b4:	27 32       	cpi	r18, 0x27	; 39
 7b6:	20 f4       	brcc	.+8      	; 0x7c0 <main+0x126>
 7b8:	2f 5f       	subi	r18, 0xFF	; 255
 7ba:	20 93 7c 00 	sts	0x007C, r18	; 0x80007c <CurrScreen>
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <main+0x12a>
			    else
			       CurrScreen = 0;
 7c0:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <CurrScreen>
		 }	 
		 
		 if (!Key2.outstate) Key2_lock = 0;
		 
		 
		 if (Key2.long_outstate && (!Key2_lock_long) && (CurrScreen > 0)) 
 7c4:	f8 01       	movw	r30, r16
 7c6:	21 81       	ldd	r18, Z+1	; 0x01
 7c8:	22 23       	and	r18, r18
 7ca:	09 f4       	brne	.+2      	; 0x7ce <main+0x134>
 7cc:	76 c1       	rjmp	.+748    	; 0xaba <main+0x420>
 7ce:	20 91 7d 00 	lds	r18, 0x007D	; 0x80007d <Key2_lock_long>
 7d2:	21 11       	cpse	r18, r1
 7d4:	09 c0       	rjmp	.+18     	; 0x7e8 <main+0x14e>
 7d6:	20 91 7c 00 	lds	r18, 0x007C	; 0x80007c <CurrScreen>
 7da:	22 23       	and	r18, r18
 7dc:	29 f0       	breq	.+10     	; 0x7e8 <main+0x14e>
		 {
		      Key2_lock_long = 1;
 7de:	f0 92 7d 00 	sts	0x007D, r15	; 0x80007d <Key2_lock_long>
			  Setup_param = !Setup_param;
 7e2:	9f 25       	eor	r25, r15
 7e4:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <Setup_param>
		 }
		 
		 if (!Key2.long_outstate) Key2_lock_long = 0;
		 

		 if (statusbyte0 & (1 << STATUS_BIT0_L_ON)) 
 7e8:	80 ff       	sbrs	r24, 0
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <main+0x156>
		 { 
			 PORTB |=LED3;
 7ec:	c2 9a       	sbi	0x18, 2	; 24
 7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <main+0x158>
		 }
		 
		 else PORTB &= ~ (LED3);
 7f0:	c2 98       	cbi	0x18, 2	; 24
		 
		if (statusbyte0 & (1 << STATUS_BIT0_R_ON))
 7f2:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <statusbyte0>
 7f6:	81 ff       	sbrs	r24, 1
 7f8:	02 c0       	rjmp	.+4      	; 0x7fe <main+0x164>
		{
			PORTB |=LED2;
 7fa:	c4 9a       	sbi	0x18, 4	; 24
 7fc:	01 c0       	rjmp	.+2      	; 0x800 <main+0x166>
		}
		
		else PORTB &= ~ (LED2);		 
 7fe:	c4 98       	cbi	0x18, 4	; 24
		 
		switch(CurrScreen)
 800:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <CurrScreen>
 804:	48 2f       	mov	r20, r24
 806:	50 e0       	ldi	r21, 0x00	; 0
 808:	48 32       	cpi	r20, 0x28	; 40
 80a:	51 05       	cpc	r21, r1
 80c:	08 f0       	brcs	.+2      	; 0x810 <main+0x176>
 80e:	3d c1       	rjmp	.+634    	; 0xa8a <main+0x3f0>
 810:	fa 01       	movw	r30, r20
 812:	e8 5d       	subi	r30, 0xD8	; 216
 814:	ff 4f       	sbci	r31, 0xFF	; 255
 816:	09 94       	ijmp
		{
			case 0: 	print_statusbyte(statusbyte0,statusbyte1,statusbyte2);
 818:	40 91 79 00 	lds	r20, 0x0079	; 0x800079 <statusbyte2>
 81c:	60 91 7a 00 	lds	r22, 0x007A	; 0x80007a <statusbyte1>
 820:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <statusbyte0>
 824:	77 de       	rcall	.-786    	; 0x514 <_Z16print_statusbytehhh>
			            break;
 826:	31 c1       	rjmp	.+610    	; 0xa8a <main+0x3f0>
			
			case 1: 	paramtodisp_addr = ADDR_WAIT_SEC_UP;
 828:	f0 92 77 00 	sts	0x0077, r15	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(1, paramtodisp,!(Setup_param && blink_bus),1);
 82c:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 830:	88 23       	and	r24, r24
 832:	21 f0       	breq	.+8      	; 0x83c <main+0x1a2>
 834:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 838:	4f 25       	eor	r20, r15
 83a:	01 c0       	rjmp	.+2      	; 0x83e <main+0x1a4>
 83c:	4f 2d       	mov	r20, r15
 83e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 842:	70 e0       	ldi	r23, 0x00	; 0
 844:	2f 2d       	mov	r18, r15
 846:	8f 2d       	mov	r24, r15
 848:	aa dd       	rcall	.-1196   	; 0x39e <_Z20print_number_decimalhjbh>
						break;
 84a:	1f c1       	rjmp	.+574    	; 0xa8a <main+0x3f0>
						
			case 2:     paramtodisp_addr = ADDR_WAIT_SEC_DOWN;
 84c:	82 e0       	ldi	r24, 0x02	; 2
 84e:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(2, paramtodisp,!(Setup_param && blink_bus),1);
 852:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 856:	88 23       	and	r24, r24
 858:	21 f0       	breq	.+8      	; 0x862 <main+0x1c8>
 85a:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 85e:	4f 25       	eor	r20, r15
 860:	01 c0       	rjmp	.+2      	; 0x864 <main+0x1ca>
 862:	4f 2d       	mov	r20, r15
 864:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 868:	70 e0       	ldi	r23, 0x00	; 0
 86a:	2f 2d       	mov	r18, r15
 86c:	82 e0       	ldi	r24, 0x02	; 2
 86e:	97 dd       	rcall	.-1234   	; 0x39e <_Z20print_number_decimalhjbh>
						break;
 870:	0c c1       	rjmp	.+536    	; 0xa8a <main+0x3f0>
			
			case 3:     paramtodisp_addr = ADDR_WAIT_SEC_LOCK;
 872:	83 e0       	ldi	r24, 0x03	; 3
 874:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(3, paramtodisp,!(Setup_param && blink_bus),1);
 878:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 87c:	88 23       	and	r24, r24
 87e:	21 f0       	breq	.+8      	; 0x888 <main+0x1ee>
 880:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 884:	4f 25       	eor	r20, r15
 886:	01 c0       	rjmp	.+2      	; 0x88a <main+0x1f0>
 888:	4f 2d       	mov	r20, r15
 88a:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 88e:	70 e0       	ldi	r23, 0x00	; 0
 890:	2f 2d       	mov	r18, r15
 892:	83 e0       	ldi	r24, 0x03	; 3
 894:	84 dd       	rcall	.-1272   	; 0x39e <_Z20print_number_decimalhjbh>
						break;
 896:	f9 c0       	rjmp	.+498    	; 0xa8a <main+0x3f0>
			case 4:     paramtodisp_addr = ADDR_PERSENTAGE_L;
 898:	84 e0       	ldi	r24, 0x04	; 4
 89a:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(4, paramtodisp,!(Setup_param && blink_bus),0);
 89e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 8a2:	88 23       	and	r24, r24
 8a4:	21 f0       	breq	.+8      	; 0x8ae <main+0x214>
 8a6:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 8aa:	4f 25       	eor	r20, r15
 8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <main+0x216>
 8ae:	4f 2d       	mov	r20, r15
 8b0:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 8b4:	70 e0       	ldi	r23, 0x00	; 0
 8b6:	20 e0       	ldi	r18, 0x00	; 0
 8b8:	84 e0       	ldi	r24, 0x04	; 4
 8ba:	71 dd       	rcall	.-1310   	; 0x39e <_Z20print_number_decimalhjbh>
			            break;				
 8bc:	e6 c0       	rjmp	.+460    	; 0xa8a <main+0x3f0>
			case 5:     paramtodisp_addr = ADDR_CMD_L;
 8be:	85 e0       	ldi	r24, 0x05	; 5
 8c0:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(5, paramtodisp,!(Setup_param && blink_bus),1);
 8c4:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 8c8:	88 23       	and	r24, r24
 8ca:	21 f0       	breq	.+8      	; 0x8d4 <main+0x23a>
 8cc:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 8d0:	4f 25       	eor	r20, r15
 8d2:	01 c0       	rjmp	.+2      	; 0x8d6 <main+0x23c>
 8d4:	4f 2d       	mov	r20, r15
 8d6:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 8da:	70 e0       	ldi	r23, 0x00	; 0
 8dc:	2f 2d       	mov	r18, r15
 8de:	85 e0       	ldi	r24, 0x05	; 5
 8e0:	5e dd       	rcall	.-1348   	; 0x39e <_Z20print_number_decimalhjbh>
			            break;	
 8e2:	d3 c0       	rjmp	.+422    	; 0xa8a <main+0x3f0>
			case 6:     paramtodisp_addr = ADDR_ENABLE_L;
 8e4:	e0 92 77 00 	sts	0x0077, r14	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(6, paramtodisp,!(Setup_param && blink_bus),0);
 8e8:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 8ec:	88 23       	and	r24, r24
 8ee:	21 f0       	breq	.+8      	; 0x8f8 <main+0x25e>
 8f0:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 8f4:	4f 25       	eor	r20, r15
 8f6:	01 c0       	rjmp	.+2      	; 0x8fa <main+0x260>
 8f8:	4f 2d       	mov	r20, r15
 8fa:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 8fe:	70 e0       	ldi	r23, 0x00	; 0
 900:	20 e0       	ldi	r18, 0x00	; 0
 902:	8e 2d       	mov	r24, r14
 904:	4c dd       	rcall	.-1384   	; 0x39e <_Z20print_number_decimalhjbh>
			            break;				
 906:	c1 c0       	rjmp	.+386    	; 0xa8a <main+0x3f0>
			case 7:     paramtodisp_addr = ADDR_PERSENTAGE_R;
 908:	b0 92 77 00 	sts	0x0077, r11	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(7, paramtodisp,!(Setup_param && blink_bus),0);
 90c:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 910:	88 23       	and	r24, r24
 912:	21 f0       	breq	.+8      	; 0x91c <main+0x282>
 914:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 918:	4f 25       	eor	r20, r15
 91a:	01 c0       	rjmp	.+2      	; 0x91e <main+0x284>
 91c:	4f 2d       	mov	r20, r15
 91e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 922:	70 e0       	ldi	r23, 0x00	; 0
 924:	20 e0       	ldi	r18, 0x00	; 0
 926:	8b 2d       	mov	r24, r11
 928:	3a dd       	rcall	.-1420   	; 0x39e <_Z20print_number_decimalhjbh>
			            break;	
 92a:	af c0       	rjmp	.+350    	; 0xa8a <main+0x3f0>
			case 8:     paramtodisp_addr = ADDR_CMD_R;
 92c:	a0 92 77 00 	sts	0x0077, r10	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(8, paramtodisp,!(Setup_param && blink_bus),1);
 930:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 934:	88 23       	and	r24, r24
 936:	21 f0       	breq	.+8      	; 0x940 <main+0x2a6>
 938:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 93c:	4f 25       	eor	r20, r15
 93e:	01 c0       	rjmp	.+2      	; 0x942 <main+0x2a8>
 940:	4f 2d       	mov	r20, r15
 942:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 946:	70 e0       	ldi	r23, 0x00	; 0
 948:	2f 2d       	mov	r18, r15
 94a:	8a 2d       	mov	r24, r10
 94c:	28 dd       	rcall	.-1456   	; 0x39e <_Z20print_number_decimalhjbh>
			            break;	
 94e:	9d c0       	rjmp	.+314    	; 0xa8a <main+0x3f0>
			case 9:     paramtodisp_addr = ADDR_ENABLE_R;
 950:	90 92 77 00 	sts	0x0077, r9	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(9, paramtodisp,!(Setup_param && blink_bus),0);
 954:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 958:	88 23       	and	r24, r24
 95a:	21 f0       	breq	.+8      	; 0x964 <main+0x2ca>
 95c:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 960:	4f 25       	eor	r20, r15
 962:	01 c0       	rjmp	.+2      	; 0x966 <main+0x2cc>
 964:	4f 2d       	mov	r20, r15
 966:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 96a:	70 e0       	ldi	r23, 0x00	; 0
 96c:	20 e0       	ldi	r18, 0x00	; 0
 96e:	89 2d       	mov	r24, r9
 970:	16 dd       	rcall	.-1492   	; 0x39e <_Z20print_number_decimalhjbh>
			            break;	
 972:	8b c0       	rjmp	.+278    	; 0xa8a <main+0x3f0>
			case 10 ... 19:     paramtodisp_addr = CurrScreen;
 974:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 978:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <Setup_param>
 97c:	99 23       	and	r25, r25
 97e:	21 f0       	breq	.+8      	; 0x988 <main+0x2ee>
 980:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 984:	4f 25       	eor	r20, r15
 986:	01 c0       	rjmp	.+2      	; 0x98a <main+0x2f0>
 988:	4f 2d       	mov	r20, r15
 98a:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 98e:	70 e0       	ldi	r23, 0x00	; 0
 990:	20 e0       	ldi	r18, 0x00	; 0
 992:	05 dd       	rcall	.-1526   	; 0x39e <_Z20print_number_decimalhjbh>
			            break;	
 994:	7a c0       	rjmp	.+244    	; 0xa8a <main+0x3f0>
			case 20 ... 29:     paramtodisp_addr = CurrScreen;
 996:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 99a:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <Setup_param>
 99e:	99 23       	and	r25, r25
 9a0:	21 f0       	breq	.+8      	; 0x9aa <main+0x310>
 9a2:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 9a6:	4f 25       	eor	r20, r15
 9a8:	01 c0       	rjmp	.+2      	; 0x9ac <main+0x312>
 9aa:	4f 2d       	mov	r20, r15
 9ac:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 9b0:	70 e0       	ldi	r23, 0x00	; 0
 9b2:	20 e0       	ldi	r18, 0x00	; 0
 9b4:	f4 dc       	rcall	.-1560   	; 0x39e <_Z20print_number_decimalhjbh>
						break;
 9b6:	69 c0       	rjmp	.+210    	; 0xa8a <main+0x3f0>
			case 30:    paramtodisp_addr = CurrScreen;
 9b8:	80 92 77 00 	sts	0x0077, r8	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 9bc:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 9c0:	88 23       	and	r24, r24
 9c2:	21 f0       	breq	.+8      	; 0x9cc <main+0x332>
 9c4:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 9c8:	4f 25       	eor	r20, r15
 9ca:	01 c0       	rjmp	.+2      	; 0x9ce <main+0x334>
 9cc:	4f 2d       	mov	r20, r15
 9ce:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 9d2:	70 e0       	ldi	r23, 0x00	; 0
 9d4:	20 e0       	ldi	r18, 0x00	; 0
 9d6:	88 2d       	mov	r24, r8
 9d8:	e2 dc       	rcall	.-1596   	; 0x39e <_Z20print_number_decimalhjbh>
						break;
 9da:	57 c0       	rjmp	.+174    	; 0xa8a <main+0x3f0>
			case 31:    paramtodisp_addr = CurrScreen;
 9dc:	70 92 77 00 	sts	0x0077, r7	; 0x800077 <paramtodisp_addr>
			            print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),2);
 9e0:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 9e4:	88 23       	and	r24, r24
 9e6:	21 f0       	breq	.+8      	; 0x9f0 <main+0x356>
 9e8:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 9ec:	4f 25       	eor	r20, r15
 9ee:	01 c0       	rjmp	.+2      	; 0x9f2 <main+0x358>
 9f0:	4f 2d       	mov	r20, r15
 9f2:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 9f6:	70 e0       	ldi	r23, 0x00	; 0
 9f8:	22 e0       	ldi	r18, 0x02	; 2
 9fa:	87 2d       	mov	r24, r7
 9fc:	d0 dc       	rcall	.-1632   	; 0x39e <_Z20print_number_decimalhjbh>
			            break;
 9fe:	45 c0       	rjmp	.+138    	; 0xa8a <main+0x3f0>
			case 32:    paramtodisp_addr = CurrScreen;
 a00:	60 92 77 00 	sts	0x0077, r6	; 0x800077 <paramtodisp_addr>
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 a04:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 a08:	88 23       	and	r24, r24
 a0a:	21 f0       	breq	.+8      	; 0xa14 <main+0x37a>
 a0c:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 a10:	4f 25       	eor	r20, r15
 a12:	01 c0       	rjmp	.+2      	; 0xa16 <main+0x37c>
 a14:	4f 2d       	mov	r20, r15
 a16:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 a1a:	70 e0       	ldi	r23, 0x00	; 0
 a1c:	20 e0       	ldi	r18, 0x00	; 0
 a1e:	86 2d       	mov	r24, r6
 a20:	be dc       	rcall	.-1668   	; 0x39e <_Z20print_number_decimalhjbh>
						break;
 a22:	33 c0       	rjmp	.+102    	; 0xa8a <main+0x3f0>
			case 33:    paramtodisp_addr = CurrScreen;
 a24:	50 92 77 00 	sts	0x0077, r5	; 0x800077 <paramtodisp_addr>
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),2);
 a28:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 a2c:	88 23       	and	r24, r24
 a2e:	21 f0       	breq	.+8      	; 0xa38 <main+0x39e>
 a30:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 a34:	4f 25       	eor	r20, r15
 a36:	01 c0       	rjmp	.+2      	; 0xa3a <main+0x3a0>
 a38:	4f 2d       	mov	r20, r15
 a3a:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 a3e:	70 e0       	ldi	r23, 0x00	; 0
 a40:	22 e0       	ldi	r18, 0x02	; 2
 a42:	85 2d       	mov	r24, r5
 a44:	ac dc       	rcall	.-1704   	; 0x39e <_Z20print_number_decimalhjbh>
						break;
 a46:	21 c0       	rjmp	.+66     	; 0xa8a <main+0x3f0>
			case 34 ... 35:    paramtodisp_addr = CurrScreen;
 a48:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 a4c:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <Setup_param>
 a50:	99 23       	and	r25, r25
 a52:	21 f0       	breq	.+8      	; 0xa5c <main+0x3c2>
 a54:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 a58:	4f 25       	eor	r20, r15
 a5a:	01 c0       	rjmp	.+2      	; 0xa5e <main+0x3c4>
 a5c:	4f 2d       	mov	r20, r15
 a5e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 a62:	70 e0       	ldi	r23, 0x00	; 0
 a64:	20 e0       	ldi	r18, 0x00	; 0
 a66:	9b dc       	rcall	.-1738   	; 0x39e <_Z20print_number_decimalhjbh>
						break;
 a68:	10 c0       	rjmp	.+32     	; 0xa8a <main+0x3f0>
			case 36 ... 39:    paramtodisp_addr = CurrScreen;
 a6a:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <paramtodisp_addr>
						print_number_decimal(paramtodisp_addr, paramtodisp,!(Setup_param && blink_bus),0);
 a6e:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <Setup_param>
 a72:	99 23       	and	r25, r25
 a74:	21 f0       	breq	.+8      	; 0xa7e <main+0x3e4>
 a76:	40 91 73 00 	lds	r20, 0x0073	; 0x800073 <blink_bus>
 a7a:	4f 25       	eor	r20, r15
 a7c:	01 c0       	rjmp	.+2      	; 0xa80 <main+0x3e6>
 a7e:	4f 2d       	mov	r20, r15
 a80:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <paramtodisp>
 a84:	70 e0       	ldi	r23, 0x00	; 0
 a86:	20 e0       	ldi	r18, 0x00	; 0
 a88:	8a dc       	rcall	.-1772   	; 0x39e <_Z20print_number_decimalhjbh>
						break;

		}
		if (Setup_param) { 
 a8a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Setup_param>
 a8e:	88 23       	and	r24, r24
 a90:	49 f0       	breq	.+18     	; 0xaa4 <main+0x40a>
			
			paramfromdisp = paramtodisp;
 a92:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <paramtodisp>
 a96:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <paramfromdisp>
			paramfromdisp_addr = paramtodisp_addr;
 a9a:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <paramtodisp_addr>
 a9e:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <paramfromdisp_addr>
 aa2:	3b ce       	rjmp	.-906    	; 0x71a <main+0x80>
		} else
		{
			paramfromdisp = 0;
 aa4:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <paramfromdisp>
			paramfromdisp_addr = 0;
 aa8:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <paramfromdisp_addr>
 aac:	36 ce       	rjmp	.-916    	; 0x71a <main+0x80>
		         if (CurrScreen > 0) CurrScreen--;
		         else
		        CurrScreen = SCREENS;
	       }
		 }
		 if (!Key1.outstate) Key1_lock = 0;
 aae:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <Key1_lock>
 ab2:	6b ce       	rjmp	.-810    	; 0x78a <main+0xf0>
			       CurrScreen = 0;
			 } 
				  
		 }	 
		 
		 if (!Key2.outstate) Key2_lock = 0;
 ab4:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <Key2_lock>
 ab8:	85 ce       	rjmp	.-758    	; 0x7c4 <main+0x12a>
		 {
		      Key2_lock_long = 1;
			  Setup_param = !Setup_param;
		 }
		 
		 if (!Key2.long_outstate) Key2_lock_long = 0;
 aba:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <Key2_lock_long>
 abe:	94 ce       	rjmp	.-728    	; 0x7e8 <main+0x14e>

00000ac0 <__umulhisi3>:
 ac0:	a2 9f       	mul	r26, r18
 ac2:	b0 01       	movw	r22, r0
 ac4:	b3 9f       	mul	r27, r19
 ac6:	c0 01       	movw	r24, r0
 ac8:	a3 9f       	mul	r26, r19
 aca:	01 d0       	rcall	.+2      	; 0xace <__umulhisi3+0xe>
 acc:	b2 9f       	mul	r27, r18
 ace:	70 0d       	add	r23, r0
 ad0:	81 1d       	adc	r24, r1
 ad2:	11 24       	eor	r1, r1
 ad4:	91 1d       	adc	r25, r1
 ad6:	08 95       	ret

00000ad8 <_exit>:
 ad8:	f8 94       	cli

00000ada <__stop_program>:
 ada:	ff cf       	rjmp	.-2      	; 0xada <__stop_program>
